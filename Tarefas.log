2025-07-06 15:34:30,806 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:34:30,811 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True}
2025-07-06 15:34:30,839 - INFO - Histórico 2 foi criado com sucesso
2025-07-06 15:34:30,840 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:34:48,368 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:34:48,370 - INFO - Realizando busca do histórico 1
2025-07-06 15:34:48,370 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:34:59,239 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:34:59,241 - DEBUG - Realizando a busca de todos os históricos
2025-07-06 15:34:59,245 - INFO - 2 históricos encontrados com sucesso
2025-07-06 15:34:59,246 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:35:10,113 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:35:10,114 - DEBUG - Realizando a busca de todos os históricos
2025-07-06 15:35:10,117 - INFO - 2 históricos encontrados com sucesso
2025-07-06 15:35:10,117 - INFO - Inside unicode_me(). val = "[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside dicttoxml(): type(obj) is: "list", obj="[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside unicode_me(). val = "[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside convert(). obj type is: "list", obj="[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,118 - INFO - Inside convert_list()
2025-07-06 15:35:10,118 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,118 - INFO - Looping inside convert_list(): item="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,118 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,118 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:10,118 - INFO - Looping inside convert_dict(): key="nome", val="API Inmet", type(val)="str"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,119 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,119 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,119 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,119 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,119 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,119 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,119 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:10,131 - INFO - Inside convert_kv(): key="nome", val="API Inmet", type(val) is: "str"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,131 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,131 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,132 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,132 - INFO - Inside escape_xml(). s = "API Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:10,132 - INFO - Looping inside convert_dict(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val)="str"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,132 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,132 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:10,133 - INFO - Inside convert_kv(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val) is: "str"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,133 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,133 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,133 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,133 - INFO - Inside escape_xml(). s = "Realizar a criação de uma API para o Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,134 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,134 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,134 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,134 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,135 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,135 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,135 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,135 - INFO - Looping inside convert_dict(): key="idtarefa", val="2", type(val)="int"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,135 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,136 - INFO - Inside convert_kv(): key="idtarefa", val="2", type(val) is: "int"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,136 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,137 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,137 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,137 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,137 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,137 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,137 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,138 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,138 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,138 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,138 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,139 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,139 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,139 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,139 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,140 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,140 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:10,140 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val)="str"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,140 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:10,141 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val) is: "str"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,141 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,141 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,142 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,142 - INFO - Inside escape_xml(). s = "2025-07-05T00:51:33.650352" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,142 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,142 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,142 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,142 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,143 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,143 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,143 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,144 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,144 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,144 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,144 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,144 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,145 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,145 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,145 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,145 - INFO - Looping inside convert_list(): item="{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,146 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,146 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "Estudar FastAPI"
2025-07-06 15:35:10,146 - INFO - Looping inside convert_dict(): key="nome", val="Estudar FastAPI", type(val)="str"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,146 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,146 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "Estudar FastAPI"
2025-07-06 15:35:10,147 - INFO - Inside convert_kv(): key="nome", val="Estudar FastAPI", type(val) is: "str"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,147 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,147 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,147 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,147 - INFO - Inside escape_xml(). s = "Estudar FastAPI" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "Estudar FastAPI"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "Se especializar na biblioteca e aplicar os conhecimentos obtidos"
2025-07-06 15:35:10,148 - INFO - Looping inside convert_dict(): key="descricao", val="Se especializar na biblioteca e aplicar os conhecimentos obtidos", type(val)="str"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,148 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,148 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "Se especializar na biblioteca e aplicar os conhecimentos obtidos"
2025-07-06 15:35:10,148 - INFO - Inside convert_kv(): key="descricao", val="Se especializar na biblioteca e aplicar os conhecimentos obtidos", type(val) is: "str"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,148 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,149 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,149 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "Se especializar na biblioteca e aplicar os conhecimentos obtidos" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "Se especializar na biblioteca e aplicar os conhecimentos obtidos"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,149 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,149 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,150 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,150 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,150 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,151 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,151 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "3"
2025-07-06 15:35:10,151 - INFO - Looping inside convert_dict(): key="idtarefa", val="3", type(val)="int"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,151 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,151 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "3"
2025-07-06 15:35:10,152 - INFO - Inside convert_kv(): key="idtarefa", val="3", type(val) is: "int"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,152 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,152 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,152 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,153 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,153 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,153 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,153 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,153 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,154 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,154 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,154 - INFO - Looping inside convert_dict(): key="idhist", val="2", type(val)="int"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,154 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,155 - INFO - Inside convert_kv(): key="idhist", val="2", type(val) is: "int"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,155 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,155 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,155 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,156 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "2025-07-06T18:32:49.953343"
2025-07-06 15:35:10,156 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-06T18:32:49.953343", type(val)="str"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,156 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,156 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "2025-07-06T18:32:49.953343"
2025-07-06 15:35:10,156 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-06T18:32:49.953343", type(val) is: "str"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,157 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,157 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,157 - INFO - Inside escape_xml(). s = "2025-07-06T18:32:49.953343" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "2025-07-06T18:32:49.953343"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,157 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,158 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,158 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,158 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,158 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,158 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,159 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,159 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,159 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,159 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,159 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,159 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,159 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,160 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,160 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,160 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,161 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:35:36,801 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:35:36,803 - INFO - Realizando busca do histórico 1
2025-07-06 15:35:36,816 - INFO - Histórico 1 encontrado com sucesso
2025-07-06 15:35:36,817 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,817 - INFO - Inside dicttoxml(): type(obj) is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,817 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside convert(). obj type is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:36,818 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:36,818 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,818 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:36,819 - INFO - Looping inside convert_dict(): key="nome", val="API Inmet", type(val)="str"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,819 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:36,819 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,819 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,820 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:36,833 - INFO - Inside convert_kv(): key="nome", val="API Inmet", type(val) is: "str"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,834 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:36,834 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,834 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,834 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,834 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,834 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:36,834 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,835 - INFO - Inside escape_xml(). s = "API Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:36,835 - INFO - Looping inside convert_dict(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val)="str"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,835 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:36,836 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,836 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,836 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:36,837 - INFO - Inside convert_kv(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val) is: "str"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,837 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:36,837 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,837 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,838 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:36,838 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,838 - INFO - Inside escape_xml(). s = "Realizar a criação de uma API para o Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,838 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,839 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:36,839 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,840 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,840 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:36,840 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,840 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,840 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:36,841 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,841 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:36,841 - INFO - Looping inside convert_dict(): key="idtarefa", val="2", type(val)="int"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,841 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:36,842 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:36,842 - INFO - Inside convert_kv(): key="idtarefa", val="2", type(val) is: "int"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,843 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:36,843 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,843 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,843 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:36,844 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,844 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:36,844 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,844 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:36,845 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:36,845 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,846 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:36,846 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,846 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,846 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:36,847 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,847 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,847 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:36,847 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,848 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,848 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,848 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,849 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,849 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:36,849 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,849 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,849 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,849 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,849 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:36,850 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,850 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:36,850 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val)="str"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,850 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:36,851 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:36,851 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val) is: "str"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,852 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:36,852 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,852 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,852 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:36,853 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,853 - INFO - Inside escape_xml(). s = "2025-07-05T00:51:33.650352" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,853 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,854 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:36,854 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,854 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,854 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,854 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,854 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:36,855 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,855 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:36,855 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,856 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,856 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,856 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,856 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:36,856 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,856 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,857 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,857 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:36,857 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,857 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,858 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:36,858 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,859 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,859 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:36,859 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,859 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,859 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,859 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,859 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:36,860 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,860 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:36:36,986 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:36:37,020 - DEBUG - Atualizando tarefa 3 com novos dados: {'titulo': 'Estudar Python - FastAPI'}
2025-07-06 15:36:37,039 - INFO - Tarefa 3 atualizada com sucesso
2025-07-06 15:36:37,039 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:37:00,865 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:37:00,866 - DEBUG - Deletando histórico 1
2025-07-06 15:37:00,867 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:37:51,425 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:37:51,427 - DEBUG - Deletando histórico 1
2025-07-06 15:37:51,448 - INFO - Histórico 1 foi marcado como deletado
2025-07-06 15:37:51,449 - INFO - A sessão com o banco de dados foi finalizada com sucesso
