2025-07-06 15:34:30,806 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:34:30,811 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True}
2025-07-06 15:34:30,839 - INFO - Histórico 2 foi criado com sucesso
2025-07-06 15:34:30,840 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:34:48,368 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:34:48,370 - INFO - Realizando busca do histórico 1
2025-07-06 15:34:48,370 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:34:59,239 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:34:59,241 - DEBUG - Realizando a busca de todos os históricos
2025-07-06 15:34:59,245 - INFO - 2 históricos encontrados com sucesso
2025-07-06 15:34:59,246 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:35:10,113 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:35:10,114 - DEBUG - Realizando a busca de todos os históricos
2025-07-06 15:35:10,117 - INFO - 2 históricos encontrados com sucesso
2025-07-06 15:35:10,117 - INFO - Inside unicode_me(). val = "[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside dicttoxml(): type(obj) is: "list", obj="[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside unicode_me(). val = "[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside convert(). obj type is: "list", obj="[{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-06 15:35:10,117 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,118 - INFO - Inside convert_list()
2025-07-06 15:35:10,118 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,118 - INFO - Looping inside convert_list(): item="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,118 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,118 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:10,118 - INFO - Looping inside convert_dict(): key="nome", val="API Inmet", type(val)="str"
2025-07-06 15:35:10,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,119 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,119 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,119 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,119 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,119 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,119 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,119 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:10,131 - INFO - Inside convert_kv(): key="nome", val="API Inmet", type(val) is: "str"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,131 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,131 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,131 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,131 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,132 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,132 - INFO - Inside escape_xml(). s = "API Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:10,132 - INFO - Looping inside convert_dict(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val)="str"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,132 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,132 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,132 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,132 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:10,133 - INFO - Inside convert_kv(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val) is: "str"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,133 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,133 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,133 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,133 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,133 - INFO - Inside escape_xml(). s = "Realizar a criação de uma API para o Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,133 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,134 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,134 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,134 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,134 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-06 15:35:10,134 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,135 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,135 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,135 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,135 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,135 - INFO - Looping inside convert_dict(): key="idtarefa", val="2", type(val)="int"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,135 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,135 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,136 - INFO - Inside convert_kv(): key="idtarefa", val="2", type(val) is: "int"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,136 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,136 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,136 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,137 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,137 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,137 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,137 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,137 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,137 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,137 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,137 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,138 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,138 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,138 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,138 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,138 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,138 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,139 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,139 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:10,139 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,139 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,139 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,140 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,140 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:10,140 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val)="str"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,140 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,140 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,140 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:10,141 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val) is: "str"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,141 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,141 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,141 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,141 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,142 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,142 - INFO - Inside escape_xml(). s = "2025-07-05T00:51:33.650352" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,142 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,142 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,142 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,142 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,142 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,143 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,143 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,143 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,143 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,143 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,144 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,144 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,144 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,144 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,144 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,144 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,145 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,145 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,145 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,145 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,145 - INFO - Inside unicode_me(). val = "{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,145 - INFO - Looping inside convert_list(): item="{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,146 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Estudar FastAPI', 'descricao': 'Se especializar na biblioteca e aplicar os conhecimentos obtidos', 'idusuario': 2, 'idtarefa': 3, 'finalizada': True, 'idhist': 2, 'dt_inclusao': '2025-07-06T18:32:49.953343', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:10,146 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "Estudar FastAPI"
2025-07-06 15:35:10,146 - INFO - Looping inside convert_dict(): key="nome", val="Estudar FastAPI", type(val)="str"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,146 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,146 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,146 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,146 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "Estudar FastAPI"
2025-07-06 15:35:10,147 - INFO - Inside convert_kv(): key="nome", val="Estudar FastAPI", type(val) is: "str"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,147 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:10,147 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:10,147 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:10,147 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,147 - INFO - Inside escape_xml(). s = "Estudar FastAPI" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "Estudar FastAPI"
2025-07-06 15:35:10,147 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "Se especializar na biblioteca e aplicar os conhecimentos obtidos"
2025-07-06 15:35:10,148 - INFO - Looping inside convert_dict(): key="descricao", val="Se especializar na biblioteca e aplicar os conhecimentos obtidos", type(val)="str"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,148 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,148 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "Se especializar na biblioteca e aplicar os conhecimentos obtidos"
2025-07-06 15:35:10,148 - INFO - Inside convert_kv(): key="descricao", val="Se especializar na biblioteca e aplicar os conhecimentos obtidos", type(val) is: "str"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,148 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,148 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:10,149 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:10,149 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "Se especializar na biblioteca e aplicar os conhecimentos obtidos" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "Se especializar na biblioteca e aplicar os conhecimentos obtidos"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,149 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,149 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,149 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,149 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,150 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,150 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:10,150 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,150 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:10,150 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:10,151 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,151 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "3"
2025-07-06 15:35:10,151 - INFO - Looping inside convert_dict(): key="idtarefa", val="3", type(val)="int"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,151 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,151 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,151 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "3"
2025-07-06 15:35:10,152 - INFO - Inside convert_kv(): key="idtarefa", val="3", type(val) is: "int"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,152 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:10,152 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:10,152 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,152 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,152 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,153 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,153 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,153 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:10,153 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,153 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,153 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:10,154 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:10,154 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,154 - INFO - Looping inside convert_dict(): key="idhist", val="2", type(val)="int"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,154 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,154 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,154 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:10,155 - INFO - Inside convert_kv(): key="idhist", val="2", type(val) is: "int"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,155 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:10,155 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,155 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:10,155 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:10,155 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,156 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "2025-07-06T18:32:49.953343"
2025-07-06 15:35:10,156 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-06T18:32:49.953343", type(val)="str"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,156 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,156 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,156 - INFO - Inside unicode_me(). val = "2025-07-06T18:32:49.953343"
2025-07-06 15:35:10,156 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-06T18:32:49.953343", type(val) is: "str"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,157 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:10,157 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:10,157 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,157 - INFO - Inside escape_xml(). s = "2025-07-06T18:32:49.953343" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "2025-07-06T18:32:49.953343"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,157 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,157 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,158 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,158 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,158 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,158 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,158 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:10,158 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,159 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:10,159 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:10,159 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,159 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,159 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,159 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,159 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,159 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:10,160 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:10,160 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:10,160 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:10,160 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:10,160 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:10,161 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:35:36,801 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:35:36,803 - INFO - Realizando busca do histórico 1
2025-07-06 15:35:36,816 - INFO - Histórico 1 encontrado com sucesso
2025-07-06 15:35:36,817 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,817 - INFO - Inside dicttoxml(): type(obj) is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,817 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside convert(). obj type is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:36,818 - INFO - Inside unicode_me(). val = "{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'API Inmet', 'descricao': 'Realizar a criação de uma API para o Inmet', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-05T00:51:33.650352', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-06 15:35:36,818 - INFO - Inside default_item_func(). parent = "response"
2025-07-06 15:35:36,818 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,818 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:36,819 - INFO - Looping inside convert_dict(): key="nome", val="API Inmet", type(val)="str"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,819 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:36,819 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,819 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,819 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,820 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:36,833 - INFO - Inside convert_kv(): key="nome", val="API Inmet", type(val) is: "str"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,833 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,834 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-06 15:35:36,834 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,834 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,834 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,834 - INFO - Inside unicode_me(). val = "nome"
2025-07-06 15:35:36,834 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-06 15:35:36,834 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,835 - INFO - Inside escape_xml(). s = "API Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "API Inmet"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:36,835 - INFO - Looping inside convert_dict(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val)="str"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,835 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,835 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:36,836 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,836 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,836 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,836 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:36,837 - INFO - Inside convert_kv(): key="descricao", val="Realizar a criação de uma API para o Inmet", type(val) is: "str"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,837 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-06 15:35:36,837 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,837 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,837 - INFO - Inside unicode_me(). val = "descricao"
2025-07-06 15:35:36,838 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-06 15:35:36,838 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,838 - INFO - Inside escape_xml(). s = "Realizar a criação de uma API para o Inmet" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "Realizar a criação de uma API para o Inmet"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,838 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-06 15:35:36,838 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,839 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:36,839 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,839 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,840 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,840 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-06 15:35:36,840 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,840 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-06 15:35:36,840 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-06 15:35:36,841 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,841 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:36,841 - INFO - Looping inside convert_dict(): key="idtarefa", val="2", type(val)="int"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,841 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,841 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:36,842 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,842 - INFO - Inside unicode_me(). val = "2"
2025-07-06 15:35:36,842 - INFO - Inside convert_kv(): key="idtarefa", val="2", type(val) is: "int"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,843 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-06 15:35:36,843 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,843 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-06 15:35:36,843 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-06 15:35:36,844 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,844 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:36,844 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,844 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,844 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:36,845 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,845 - INFO - Inside unicode_me(). val = "True"
2025-07-06 15:35:36,845 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,846 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-06 15:35:36,846 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,846 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,846 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-06 15:35:36,846 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-06 15:35:36,847 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,847 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,847 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,847 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:36,847 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,848 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,848 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "1"
2025-07-06 15:35:36,848 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-06 15:35:36,848 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,849 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,849 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-06 15:35:36,849 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,849 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,849 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,849 - INFO - Inside unicode_me(). val = "idhist"
2025-07-06 15:35:36,849 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-06 15:35:36,850 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,850 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:36,850 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val)="str"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,850 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,850 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:36,851 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,851 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:36,851 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-05T00:51:33.650352", type(val) is: "str"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,852 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-06 15:35:36,852 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,852 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,852 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-06 15:35:36,852 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-06 15:35:36,853 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,853 - INFO - Inside escape_xml(). s = "2025-07-05T00:51:33.650352" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "2025-07-05T00:51:33.650352"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,853 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,853 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,854 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:36,854 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,854 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,854 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,854 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,854 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:36,855 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,855 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,855 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-06 15:35:36,855 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,856 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,856 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,856 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-06 15:35:36,856 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-06 15:35:36,856 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,856 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,857 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,857 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:36,857 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,857 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,857 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,858 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "None"
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "False"
2025-07-06 15:35:36,858 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-06 15:35:36,858 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,859 - INFO - Inside unicode_me(). val = "{}"
2025-07-06 15:35:36,859 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-06 15:35:36,859 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-06 15:35:36,859 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,859 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-06 15:35:36,859 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-06 15:35:36,859 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-06 15:35:36,860 - INFO - Inside make_attstring(). attr = "{}"
2025-07-06 15:35:36,860 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:36:36,986 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:36:37,020 - DEBUG - Atualizando tarefa 3 com novos dados: {'titulo': 'Estudar Python - FastAPI'}
2025-07-06 15:36:37,039 - INFO - Tarefa 3 atualizada com sucesso
2025-07-06 15:36:37,039 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:37:00,865 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:37:00,866 - DEBUG - Deletando histórico 1
2025-07-06 15:37:00,867 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-06 15:37:51,425 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-06 15:37:51,427 - DEBUG - Deletando histórico 1
2025-07-06 15:37:51,448 - INFO - Histórico 1 foi marcado como deletado
2025-07-06 15:37:51,449 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-07 20:45:27,327 - INFO - Iniciando consulta de histórico para usuários com tarefas finalizadas.
2025-07-07 20:45:27,348 - INFO - Usuário: 2 | Pontos: 5 | idHistórico: 2
2025-07-07 20:45:27,349 - INFO - Iniciando extração da API - pontuação: 5
2025-07-07 20:45:27,358 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-07 20:45:27,777 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/5 HTTP/1.1" 200 6749
2025-07-07 20:45:27,786 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/5/
2025-07-07 20:45:27,788 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-07 20:45:28,181 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/5/ HTTP/1.1" 200 5769
2025-07-07 20:45:28,185 - INFO - Transform_API concluída para: charmeleon
2025-07-07 20:45:28,185 - INFO - Pokémon selecionado: charmeleon, Descrição: \u5982\u679c\u5b83\u5728\u6218\u6597\u4e2d\u4ea2\u594b\u8d77\u6765\uff0c \u5c31\u4f1a\u55b7\u51fa\u707c\u70ed\u7684\u706b\u7130\uff0c \u628a\u5468\u56f4\u7684\u4e1c\u897f\u70e7\u5f97\u4e00\u5e72\u4e8c\u51c0\u3002, Imagem: https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/5.png
2025-07-09 09:32:10,536 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:32:10,654 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste recompensa', 'descricao': 'testando', 'idusuario': 2, 'idtarefa': 2, 'finalizada': True}
2025-07-09 09:32:10,749 - INFO - Histórico 3 foi criado com sucesso
2025-07-09 09:32:10,773 - DEBUG - Criando recompensa para hist: 3, usuário: 2
2025-07-09 09:32:10,774 - INFO - Iniciando extração da API - pontuação: 25
2025-07-09 09:32:10,796 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:32:10,948 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/25 HTTP/1.1" 200 7454
2025-07-09 09:32:10,962 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/25/
2025-07-09 09:32:10,966 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:32:11,071 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/25/ HTTP/1.1" 200 9630
2025-07-09 09:32:11,078 - INFO - Transform_API concluída para: pikachu
2025-07-09 09:32:11,083 - ERROR - Erro ao criar histórico: (sqlite3.OperationalError) table recompensa has no column named imagem_url
[SQL: INSERT INTO recompensa (idhist, nome, descricao, imagem_url, pontos) VALUES (?, ?, ?, ?, ?)]
[parameters: (3, 'pikachu', 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 25)]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-07-09 09:32:11,085 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:33:05,695 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:33:05,696 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste1', 'descricao': 'teste1', 'idusuario': 2, 'idtarefa': 2, 'finalizada': False}
2025-07-09 09:33:05,714 - INFO - Histórico 4 foi criado com sucesso
2025-07-09 09:33:05,721 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:40:23,564 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:40:23,573 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste', 'descricao': 'teste', 'idusuario': 2, 'idtarefa': 1, 'finalizada': False}
2025-07-09 09:40:23,589 - WARNING - Esse usuário não existe: 2
2025-07-09 09:40:23,590 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:42:15,928 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:42:15,951 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'tsete', 'descricao': 't', 'idusuario': 3, 'idtarefa': 1, 'finalizada': True}
2025-07-09 09:42:16,025 - WARNING - Essa tarefa não existe: 1
2025-07-09 09:42:16,026 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:42:45,239 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:42:45,240 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste', 'descricao': 'teste', 'idusuario': 3, 'idtarefa': 2, 'finalizada': True}
2025-07-09 09:42:45,322 - INFO - Histórico 5 foi criado com sucesso
2025-07-09 09:42:45,335 - DEBUG - Criando recompensa para hist: 5, usuário: 2
2025-07-09 09:42:45,336 - INFO - Iniciando extração da API - pontuação: 25
2025-07-09 09:42:45,367 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:42:45,527 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/25 HTTP/1.1" 200 7454
2025-07-09 09:42:45,536 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/25/
2025-07-09 09:42:45,538 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:42:45,609 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/25/ HTTP/1.1" 200 9630
2025-07-09 09:42:45,615 - INFO - Transform_API concluída para: pikachu
2025-07-09 09:42:45,619 - ERROR - Erro ao criar histórico: (sqlite3.OperationalError) table recompensa has no column named imagem_url
[SQL: INSERT INTO recompensa (idhist, nome, descricao, imagem_url, pontos) VALUES (?, ?, ?, ?, ?)]
[parameters: (5, 'pikachu', 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 25)]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-07-09 09:42:45,619 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:49:20,810 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:49:20,819 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'terste', 'descricao': 'teste', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True}
2025-07-09 09:49:20,855 - INFO - Histórico 6 foi criado com sucesso
2025-07-09 09:49:20,862 - DEBUG - Criando recompensa para hist: 6, usuário: 3
2025-07-09 09:49:20,862 - INFO - Iniciando extração da API - pontuação: 30
2025-07-09 09:49:20,867 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:49:21,007 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/30 HTTP/1.1" 200 5943
2025-07-09 09:49:21,012 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/30/
2025-07-09 09:49:21,014 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:49:21,093 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/30/ HTTP/1.1" 200 6103
2025-07-09 09:49:21,097 - INFO - Transform_API concluída para: nidorina
2025-07-09 09:49:21,100 - ERROR - Erro ao criar histórico: (sqlite3.OperationalError) table recompensa has no column named imagem_url
[SQL: INSERT INTO recompensa (idhist, nome, descricao, imagem_url, pontos) VALUES (?, ?, ?, ?, ?)]
[parameters: (6, 'nidorina', '\u5982\u679c\u65cf\u7fa4\u9047\u5230\u4e86\u5371\u9669\uff0c \u4f1a\u548c\u4f19\u4f34\u4eec\u56e2\u7ed3\u8d77\u6765\uff0c \u65bd\u5c55\u51fa\u8d85\u97f3\u6ce2\u5927\u5408\u5531\u3002', 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/30.png', 30)]
(Background on this error at: https://sqlalche.me/e/14/e3q8)
2025-07-09 09:49:21,101 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:57:10,255 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:57:10,264 - DEBUG - Dados para novo usário foram recebidos com sucesso: {'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino'}
2025-07-09 09:57:10,286 - INFO - Usuário 1 foi criado com sucesso
2025-07-09 09:57:10,288 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:58:04,894 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:58:04,898 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Criar uma API com python', 'descricao': 'Desafio de realizar a criação de uma API utilizando linguagem python em 30 dias', 'pontos': 10}
2025-07-09 09:58:04,913 - INFO - Tarefa 1 foi criada com sucesso
2025-07-09 09:58:04,915 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 09:59:03,549 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 09:59:03,581 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Criar API - python', 'descricao': 'Finalização do desafio de criação da API com python em menos de 30 dias', 'idusuario': 1, 'idtarefa': 1, 'finalizada': True}
2025-07-09 09:59:03,663 - INFO - Histórico 1 foi criado com sucesso
2025-07-09 09:59:03,679 - DEBUG - Criando recompensa para hist: 1, usuário: 1
2025-07-09 09:59:03,679 - INFO - Iniciando extração da API - pontuação: 10
2025-07-09 09:59:03,699 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:59:03,886 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/10 HTTP/1.1" 200 2152
2025-07-09 09:59:03,892 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/10/
2025-07-09 09:59:03,896 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 09:59:03,983 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/10/ HTTP/1.1" 200 8346
2025-07-09 09:59:03,992 - INFO - Transform_API concluída para: caterpie
2025-07-09 09:59:04,015 - INFO - Recompensa criada para histórico 1
2025-07-09 09:59:04,018 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:03:32,245 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:03:32,252 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Olímpiada da matemática', 'descricao': 'Participar da olímpiada da matemática e concluir a primeira fase', 'pontos': 5}
2025-07-09 10:03:32,272 - INFO - Tarefa 2 foi criada com sucesso
2025-07-09 10:03:32,274 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:04:30,224 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:04:30,229 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Olimpiada da matemática', 'descricao': 'Conlusão da primiera etapa da olimpiada', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True}
2025-07-09 10:04:30,250 - INFO - Histórico 2 foi criado com sucesso
2025-07-09 10:04:30,251 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:06:32,776 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:06:32,785 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Olimpiada da matemática', 'descricao': 'finlização da segunda etapa das olimpiadas', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True}
2025-07-09 10:06:32,814 - INFO - Histórico 3 foi criado com sucesso
2025-07-09 10:06:32,820 - DEBUG - Criando recompensa para hist: 3, usuário: 1
2025-07-09 10:06:32,820 - INFO - Iniciando extração da API - pontuação: 20
2025-07-09 10:06:32,824 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 10:06:32,940 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/20 HTTP/1.1" 200 6610
2025-07-09 10:06:32,949 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/20/
2025-07-09 10:06:32,951 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 10:06:33,034 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/20/ HTTP/1.1" 200 7464
2025-07-09 10:06:33,037 - INFO - Transform_API concluída para: raticate
2025-07-09 10:06:33,050 - INFO - Recompensa criada para histórico 3
2025-07-09 10:06:33,052 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:10:02,039 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:10:02,046 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste', 'descricao': 'teste', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True}
2025-07-09 10:10:02,084 - INFO - Histórico 4 foi criado com sucesso
2025-07-09 10:10:02,089 - DEBUG - Criando recompensa para hist: 4, usuário: 1
2025-07-09 10:10:02,089 - INFO - Iniciando extração da API - pontuação: 25
2025-07-09 10:10:02,094 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 10:10:02,205 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/25 HTTP/1.1" 200 7454
2025-07-09 10:10:02,212 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/25/
2025-07-09 10:10:02,214 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 10:10:02,301 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/25/ HTTP/1.1" 200 9630
2025-07-09 10:10:02,306 - INFO - Transform_API concluída para: pikachu
2025-07-09 10:10:02,320 - INFO - Recompensa criada para histórico 4
2025-07-09 10:10:02,321 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:20:59,150 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:20:59,151 - INFO - Realizando busca na recompensa cujo id de histórico é <built-in function id>
2025-07-09 10:20:59,156 - INFO - Recompensa do histórico <built-in function id> encontrada com sucesso
2025-07-09 10:20:59,160 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:22:18,177 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:22:18,182 - INFO - Realizando busca na recompensa cujo id de histórico é <built-in function id>
2025-07-09 10:22:18,185 - INFO - Recompensa do histórico <built-in function id> encontrada com sucesso
2025-07-09 10:22:18,187 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:25:54,332 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:25:54,333 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 10:25:54,343 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:27:49,342 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:27:49,344 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 10:27:49,355 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:29:20,185 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:29:20,189 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 10:29:20,198 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:31:06,978 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:31:06,980 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 10:31:06,992 - INFO - 3 recompensas encontradas com sucesso
2025-07-09 10:31:06,993 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:31:52,118 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:31:52,120 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 10:31:52,132 - INFO - 3 recompensas encontradas com sucesso
2025-07-09 10:31:52,133 - INFO - Inside unicode_me(). val = "[{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}, {'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}, {'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}]"
2025-07-09 10:31:52,133 - INFO - Inside dicttoxml(): type(obj) is: "list", obj="[{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}, {'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}, {'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}]"
2025-07-09 10:31:52,134 - INFO - Inside unicode_me(). val = "[{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}, {'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}, {'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}]"
2025-07-09 10:31:52,134 - INFO - Inside convert(). obj type is: "list", obj="[{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}, {'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}, {'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}]"
2025-07-09 10:31:52,134 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:31:52,134 - INFO - Inside convert_list()
2025-07-09 10:31:52,134 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:31:52,134 - INFO - Inside unicode_me(). val = "{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}"
2025-07-09 10:31:52,134 - INFO - Looping inside convert_list(): item="{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}", item_name="item", type="dict"
2025-07-09 10:31:52,135 - INFO - Inside unicode_me(). val = "{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}"
2025-07-09 10:31:52,135 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'idhist': 1, 'nome': 'caterpie', 'descricao': '\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png', 'pontos': 10, 'idrecom': 1}"
2025-07-09 10:31:52,135 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:31:52,135 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,135 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:31:52,135 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-09 10:31:52,135 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,135 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,135 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 10:31:52,136 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,136 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,136 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,136 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,136 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 10:31:52,152 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,152 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:31:52,153 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-09 10:31:52,153 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,153 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,153 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 10:31:52,153 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,153 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,153 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,153 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,154 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 10:31:52,154 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,154 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,154 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,154 - INFO - Inside unicode_me(). val = "caterpie"
2025-07-09 10:31:52,154 - INFO - Looping inside convert_dict(): key="nome", val="caterpie", type(val)="str"
2025-07-09 10:31:52,154 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,154 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,155 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:31:52,155 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,155 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,155 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,155 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,155 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:31:52,155 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,156 - INFO - Inside unicode_me(). val = "caterpie"
2025-07-09 10:31:52,156 - INFO - Inside convert_kv(): key="nome", val="caterpie", type(val) is: "str"
2025-07-09 10:31:52,156 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,156 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,156 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:31:52,156 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,156 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,156 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,156 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,156 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:31:52,157 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,157 - INFO - Inside escape_xml(). s = "caterpie" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,157 - INFO - Inside unicode_me(). val = "caterpie"
2025-07-09 10:31:52,157 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,157 - INFO - Inside unicode_me(). val = "\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002"
2025-07-09 10:31:52,157 - INFO - Looping inside convert_dict(): key="descricao", val="\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002", type(val)="str"
2025-07-09 10:31:52,157 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,157 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,157 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 10:31:52,157 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,158 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,158 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,158 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,158 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 10:31:52,158 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,158 - INFO - Inside unicode_me(). val = "\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002"
2025-07-09 10:31:52,158 - INFO - Inside convert_kv(): key="descricao", val="\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002", type(val) is: "str"
2025-07-09 10:31:52,158 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,159 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,159 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 10:31:52,159 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,159 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,159 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,159 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,159 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 10:31:52,159 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,159 - INFO - Inside escape_xml(). s = "\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,161 - INFO - Inside unicode_me(). val = "\u522b\u770b\u5b83\u7684\u811a\u5f88\u77ed\uff0c \u56e0\u4e3a\u662f\u5438\u76d8\uff0c\u6240\u4ee5\u65e0\u8bba\u662f \u659c\u5761\u8fd8\u662f\u5899\u58c1\u90fd\u80fd\u8f7b\u677e\u524d\u8fdb\u3002"
2025-07-09 10:31:52,161 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,161 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png"
2025-07-09 10:31:52,161 - INFO - Looping inside convert_dict(): key="imagem_url", val="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png", type(val)="str"
2025-07-09 10:31:52,161 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,161 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,162 - INFO - Inside make_valid_xml_name(). Testing key "imagem_url" with attr "{}"
2025-07-09 10:31:52,162 - INFO - Inside escape_xml(). s = "imagem_url" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,162 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,162 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,162 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,162 - INFO - Inside key_is_valid_xml(). Testing "imagem_url"
2025-07-09 10:31:52,163 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,163 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png"
2025-07-09 10:31:52,163 - INFO - Inside convert_kv(): key="imagem_url", val="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png", type(val) is: "str"
2025-07-09 10:31:52,163 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,163 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,163 - INFO - Inside make_valid_xml_name(). Testing key "imagem_url" with attr "{}"
2025-07-09 10:31:52,163 - INFO - Inside escape_xml(). s = "imagem_url" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,163 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,163 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,164 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,164 - INFO - Inside key_is_valid_xml(). Testing "imagem_url"
2025-07-09 10:31:52,164 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,164 - INFO - Inside escape_xml(). s = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,164 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png"
2025-07-09 10:31:52,164 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,164 - INFO - Inside unicode_me(). val = "10"
2025-07-09 10:31:52,164 - INFO - Looping inside convert_dict(): key="pontos", val="10", type(val)="int"
2025-07-09 10:31:52,165 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,165 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,165 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 10:31:52,165 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,165 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,165 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,165 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,165 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 10:31:52,165 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,165 - INFO - Inside unicode_me(). val = "10"
2025-07-09 10:31:52,166 - INFO - Inside convert_kv(): key="pontos", val="10", type(val) is: "int"
2025-07-09 10:31:52,166 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,166 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,166 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 10:31:52,166 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,166 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,166 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,166 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,166 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 10:31:52,167 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,167 - INFO - Inside escape_xml(). s = "10" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,167 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,167 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:31:52,167 - INFO - Looping inside convert_dict(): key="idrecom", val="1", type(val)="int"
2025-07-09 10:31:52,167 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,167 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,168 - INFO - Inside make_valid_xml_name(). Testing key "idrecom" with attr "{}"
2025-07-09 10:31:52,168 - INFO - Inside escape_xml(). s = "idrecom" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,168 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,168 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,168 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,168 - INFO - Inside key_is_valid_xml(). Testing "idrecom"
2025-07-09 10:31:52,168 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,168 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:31:52,169 - INFO - Inside convert_kv(): key="idrecom", val="1", type(val) is: "int"
2025-07-09 10:31:52,169 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,169 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,169 - INFO - Inside make_valid_xml_name(). Testing key "idrecom" with attr "{}"
2025-07-09 10:31:52,169 - INFO - Inside escape_xml(). s = "idrecom" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,169 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,169 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,169 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,170 - INFO - Inside key_is_valid_xml(). Testing "idrecom"
2025-07-09 10:31:52,170 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,170 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,170 - INFO - Inside unicode_me(). val = "{'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}"
2025-07-09 10:31:52,170 - INFO - Looping inside convert_list(): item="{'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}", item_name="item", type="dict"
2025-07-09 10:31:52,170 - INFO - Inside unicode_me(). val = "{'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}"
2025-07-09 10:31:52,170 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'idhist': 3, 'nome': 'raticate', 'descricao': '\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png', 'pontos': 20, 'idrecom': 2}"
2025-07-09 10:31:52,171 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:31:52,171 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,171 - INFO - Inside unicode_me(). val = "3"
2025-07-09 10:31:52,171 - INFO - Looping inside convert_dict(): key="idhist", val="3", type(val)="int"
2025-07-09 10:31:52,171 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,171 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,171 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 10:31:52,171 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,172 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,172 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,172 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,172 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 10:31:52,172 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,172 - INFO - Inside unicode_me(). val = "3"
2025-07-09 10:31:52,172 - INFO - Inside convert_kv(): key="idhist", val="3", type(val) is: "int"
2025-07-09 10:31:52,173 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,173 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,173 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 10:31:52,173 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,173 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,173 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,173 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,173 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 10:31:52,173 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,173 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,173 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,175 - INFO - Inside unicode_me(). val = "raticate"
2025-07-09 10:31:52,175 - INFO - Looping inside convert_dict(): key="nome", val="raticate", type(val)="str"
2025-07-09 10:31:52,175 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,175 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,175 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:31:52,175 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,175 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,175 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,175 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,176 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:31:52,176 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,176 - INFO - Inside unicode_me(). val = "raticate"
2025-07-09 10:31:52,176 - INFO - Inside convert_kv(): key="nome", val="raticate", type(val) is: "str"
2025-07-09 10:31:52,176 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,176 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,176 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:31:52,176 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,176 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,177 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,177 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,177 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:31:52,177 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,177 - INFO - Inside escape_xml(). s = "raticate" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,177 - INFO - Inside unicode_me(). val = "raticate"
2025-07-09 10:31:52,178 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,178 - INFO - Inside unicode_me(). val = "\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002"
2025-07-09 10:31:52,178 - INFO - Looping inside convert_dict(): key="descricao", val="\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002", type(val)="str"
2025-07-09 10:31:52,178 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,178 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,178 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 10:31:52,178 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,178 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,178 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,179 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,179 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 10:31:52,179 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,179 - INFO - Inside unicode_me(). val = "\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002"
2025-07-09 10:31:52,179 - INFO - Inside convert_kv(): key="descricao", val="\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002", type(val) is: "str"
2025-07-09 10:31:52,179 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,179 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,180 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 10:31:52,180 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,180 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,180 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,180 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,180 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 10:31:52,180 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,181 - INFO - Inside escape_xml(). s = "\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,181 - INFO - Inside unicode_me(). val = "\u5b83\u7684\u540e\u811a\u4e0a\u957f\u7740 \u5c0f\u8e7c\uff0c\u4ee5\u4fbf\u5b83\u5728 \u6c34\u4e2d\u6e38\u6cf3\u5bfb\u627e\u98df\u7269\u3002"
2025-07-09 10:31:52,181 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,181 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png"
2025-07-09 10:31:52,181 - INFO - Looping inside convert_dict(): key="imagem_url", val="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png", type(val)="str"
2025-07-09 10:31:52,181 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,181 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,182 - INFO - Inside make_valid_xml_name(). Testing key "imagem_url" with attr "{}"
2025-07-09 10:31:52,182 - INFO - Inside escape_xml(). s = "imagem_url" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,182 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,182 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,182 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,182 - INFO - Inside key_is_valid_xml(). Testing "imagem_url"
2025-07-09 10:31:52,182 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,182 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png"
2025-07-09 10:31:52,182 - INFO - Inside convert_kv(): key="imagem_url", val="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png", type(val) is: "str"
2025-07-09 10:31:52,183 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,183 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,183 - INFO - Inside make_valid_xml_name(). Testing key "imagem_url" with attr "{}"
2025-07-09 10:31:52,183 - INFO - Inside escape_xml(). s = "imagem_url" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,183 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,183 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,183 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,183 - INFO - Inside key_is_valid_xml(). Testing "imagem_url"
2025-07-09 10:31:52,183 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,184 - INFO - Inside escape_xml(). s = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "20"
2025-07-09 10:31:52,184 - INFO - Looping inside convert_dict(): key="pontos", val="20", type(val)="int"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,184 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 10:31:52,184 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,184 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,184 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,184 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 10:31:52,186 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,186 - INFO - Inside unicode_me(). val = "20"
2025-07-09 10:31:52,186 - INFO - Inside convert_kv(): key="pontos", val="20", type(val) is: "int"
2025-07-09 10:31:52,186 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,186 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,186 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 10:31:52,186 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,186 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,186 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,186 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,187 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 10:31:52,187 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,187 - INFO - Inside escape_xml(). s = "20" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,187 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,187 - INFO - Inside unicode_me(). val = "2"
2025-07-09 10:31:52,187 - INFO - Looping inside convert_dict(): key="idrecom", val="2", type(val)="int"
2025-07-09 10:31:52,187 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,187 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,187 - INFO - Inside make_valid_xml_name(). Testing key "idrecom" with attr "{}"
2025-07-09 10:31:52,187 - INFO - Inside escape_xml(). s = "idrecom" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,187 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,188 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,188 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,188 - INFO - Inside key_is_valid_xml(). Testing "idrecom"
2025-07-09 10:31:52,188 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,188 - INFO - Inside unicode_me(). val = "2"
2025-07-09 10:31:52,188 - INFO - Inside convert_kv(): key="idrecom", val="2", type(val) is: "int"
2025-07-09 10:31:52,188 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,188 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,188 - INFO - Inside make_valid_xml_name(). Testing key "idrecom" with attr "{}"
2025-07-09 10:31:52,188 - INFO - Inside escape_xml(). s = "idrecom" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,189 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,189 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,189 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,189 - INFO - Inside key_is_valid_xml(). Testing "idrecom"
2025-07-09 10:31:52,189 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,189 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,189 - INFO - Inside unicode_me(). val = "{'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}"
2025-07-09 10:31:52,189 - INFO - Looping inside convert_list(): item="{'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}", item_name="item", type="dict"
2025-07-09 10:31:52,189 - INFO - Inside unicode_me(). val = "{'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}"
2025-07-09 10:31:52,189 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'idhist': 4, 'nome': 'pikachu', 'descricao': 'Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.', 'imagem_url': 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png', 'pontos': 25, 'idrecom': 3}"
2025-07-09 10:31:52,190 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "4"
2025-07-09 10:31:52,190 - INFO - Looping inside convert_dict(): key="idhist", val="4", type(val)="int"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,190 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 10:31:52,190 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,190 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,190 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,190 - INFO - Inside unicode_me(). val = "4"
2025-07-09 10:31:52,191 - INFO - Inside convert_kv(): key="idhist", val="4", type(val) is: "int"
2025-07-09 10:31:52,191 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,191 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,191 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 10:31:52,191 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,191 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,191 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,191 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 10:31:52,191 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 10:31:52,191 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,191 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,192 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,193 - INFO - Inside unicode_me(). val = "pikachu"
2025-07-09 10:31:52,193 - INFO - Looping inside convert_dict(): key="nome", val="pikachu", type(val)="str"
2025-07-09 10:31:52,193 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,193 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,193 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:31:52,193 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,193 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,193 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,195 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,195 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:31:52,195 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,195 - INFO - Inside unicode_me(). val = "pikachu"
2025-07-09 10:31:52,195 - INFO - Inside convert_kv(): key="nome", val="pikachu", type(val) is: "str"
2025-07-09 10:31:52,195 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,195 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,195 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:31:52,195 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,196 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,196 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,196 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:31:52,196 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:31:52,196 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,196 - INFO - Inside escape_xml(). s = "pikachu" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,196 - INFO - Inside unicode_me(). val = "pikachu"
2025-07-09 10:31:52,196 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,196 - INFO - Inside unicode_me(). val = "Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them."
2025-07-09 10:31:52,196 - INFO - Looping inside convert_dict(): key="descricao", val="Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.", type(val)="str"
2025-07-09 10:31:52,197 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,197 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,197 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 10:31:52,197 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,197 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,197 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,197 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,197 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 10:31:52,197 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,197 - INFO - Inside unicode_me(). val = "Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them."
2025-07-09 10:31:52,198 - INFO - Inside convert_kv(): key="descricao", val="Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them.", type(val) is: "str"
2025-07-09 10:31:52,198 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,198 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,198 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 10:31:52,198 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,198 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,198 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,198 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 10:31:52,198 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 10:31:52,198 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,199 - INFO - Inside escape_xml(). s = "Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them." and type(s) = "<class 'str'>"
2025-07-09 10:31:52,199 - INFO - Inside unicode_me(). val = "Possesses cheek sacs in which it stores electricity. This clever forest-dweller roasts tough berries with an electric shock before consuming them."
2025-07-09 10:31:52,199 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,199 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png"
2025-07-09 10:31:52,199 - INFO - Looping inside convert_dict(): key="imagem_url", val="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png", type(val)="str"
2025-07-09 10:31:52,199 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,199 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,199 - INFO - Inside make_valid_xml_name(). Testing key "imagem_url" with attr "{}"
2025-07-09 10:31:52,199 - INFO - Inside escape_xml(). s = "imagem_url" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,199 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,200 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,200 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,200 - INFO - Inside key_is_valid_xml(). Testing "imagem_url"
2025-07-09 10:31:52,200 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,200 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png"
2025-07-09 10:31:52,200 - INFO - Inside convert_kv(): key="imagem_url", val="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png", type(val) is: "str"
2025-07-09 10:31:52,200 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,200 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,200 - INFO - Inside make_valid_xml_name(). Testing key "imagem_url" with attr "{}"
2025-07-09 10:31:52,200 - INFO - Inside escape_xml(). s = "imagem_url" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,200 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,201 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,201 - INFO - Inside unicode_me(). val = "imagem_url"
2025-07-09 10:31:52,201 - INFO - Inside key_is_valid_xml(). Testing "imagem_url"
2025-07-09 10:31:52,201 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,201 - INFO - Inside escape_xml(). s = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,201 - INFO - Inside unicode_me(). val = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png"
2025-07-09 10:31:52,201 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,201 - INFO - Inside unicode_me(). val = "25"
2025-07-09 10:31:52,201 - INFO - Looping inside convert_dict(): key="pontos", val="25", type(val)="int"
2025-07-09 10:31:52,201 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,201 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,201 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 10:31:52,202 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,202 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,202 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,202 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,202 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 10:31:52,202 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,202 - INFO - Inside unicode_me(). val = "25"
2025-07-09 10:31:52,202 - INFO - Inside convert_kv(): key="pontos", val="25", type(val) is: "int"
2025-07-09 10:31:52,202 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,202 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,202 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 10:31:52,202 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,203 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,203 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,203 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 10:31:52,203 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 10:31:52,203 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,203 - INFO - Inside escape_xml(). s = "25" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,203 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,203 - INFO - Inside unicode_me(). val = "3"
2025-07-09 10:31:52,203 - INFO - Looping inside convert_dict(): key="idrecom", val="3", type(val)="int"
2025-07-09 10:31:52,203 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,203 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,203 - INFO - Inside make_valid_xml_name(). Testing key "idrecom" with attr "{}"
2025-07-09 10:31:52,203 - INFO - Inside escape_xml(). s = "idrecom" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,204 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,204 - INFO - Inside key_is_valid_xml(). Testing "idrecom"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "3"
2025-07-09 10:31:52,204 - INFO - Inside convert_kv(): key="idrecom", val="3", type(val) is: "int"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:31:52,204 - INFO - Inside make_valid_xml_name(). Testing key "idrecom" with attr "{}"
2025-07-09 10:31:52,204 - INFO - Inside escape_xml(). s = "idrecom" and type(s) = "<class 'str'>"
2025-07-09 10:31:52,204 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,205 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:31:52,205 - INFO - Inside unicode_me(). val = "idrecom"
2025-07-09 10:31:52,205 - INFO - Inside key_is_valid_xml(). Testing "idrecom"
2025-07-09 10:31:52,205 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:31:52,205 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 10:31:52,206 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:32:44,535 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:32:44,537 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 10:32:44,540 - INFO - 3 recompensas encontradas com sucesso
2025-07-09 10:32:44,541 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:34:16,925 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:34:16,927 - INFO - Realizando busca na recompensa cujo id de histórico é 1
2025-07-09 10:34:16,938 - INFO - Recompensa do histórico 1 encontrada com sucesso
2025-07-09 10:34:16,943 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:48:37,871 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:48:37,880 - DEBUG - Dados para novo usário foram recebidos com sucesso: {'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino'}
2025-07-09 10:48:37,906 - INFO - Usuário 1 foi criado com sucesso
2025-07-09 10:48:37,907 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:49:38,354 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:49:38,355 - DEBUG - Dados para novo usário foram recebidos com sucesso: {'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino'}
2025-07-09 10:49:38,368 - INFO - Usuário 2 foi criado com sucesso
2025-07-09 10:49:38,369 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:50:00,266 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:50:00,267 - DEBUG - Dados para novo usário foram recebidos com sucesso: {'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino'}
2025-07-09 10:50:00,286 - INFO - Usuário 3 foi criado com sucesso
2025-07-09 10:50:00,288 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:50:18,312 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:50:18,313 - DEBUG - Dados para novo usário foram recebidos com sucesso: {'nome': 'João', 'idade': 25, 'sexo': 'Masculino'}
2025-07-09 10:50:18,329 - INFO - Usuário 4 foi criado com sucesso
2025-07-09 10:50:18,330 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:50:41,506 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:50:41,507 - DEBUG - Dados para novo usário foram recebidos com sucesso: {'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino'}
2025-07-09 10:50:41,520 - INFO - Usuário 5 foi criado com sucesso
2025-07-09 10:50:41,520 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:50:51,399 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:50:51,401 - DEBUG - Realizando a busca de todos os usuários
2025-07-09 10:50:51,409 - INFO - 5 usuários encontrados com sucesso
2025-07-09 10:50:51,410 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:51:23,837 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:51:23,838 - DEBUG - Realizando a busca de todos os usuários
2025-07-09 10:51:23,842 - INFO - 5 usuários encontrados com sucesso
2025-07-09 10:51:23,844 - INFO - Inside unicode_me(). val = "[{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 10:51:23,846 - INFO - Inside dicttoxml(): type(obj) is: "list", obj="[{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 10:51:23,846 - INFO - Inside unicode_me(). val = "[{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 10:51:23,847 - INFO - Inside convert(). obj type is: "list", obj="[{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 10:51:23,848 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,851 - INFO - Inside convert_list()
2025-07-09 10:51:23,851 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,851 - INFO - Inside unicode_me(). val = "{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,851 - INFO - Looping inside convert_list(): item="{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 10:51:23,851 - INFO - Inside unicode_me(). val = "{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,852 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,852 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,852 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,852 - INFO - Inside unicode_me(). val = "Isadora"
2025-07-09 10:51:23,852 - INFO - Looping inside convert_dict(): key="nome", val="Isadora", type(val)="str"
2025-07-09 10:51:23,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,853 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,853 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,853 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,853 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,853 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,888 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,888 - INFO - Inside unicode_me(). val = "Isadora"
2025-07-09 10:51:23,888 - INFO - Inside convert_kv(): key="nome", val="Isadora", type(val) is: "str"
2025-07-09 10:51:23,888 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,888 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,888 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,890 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,890 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,890 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,890 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,890 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,890 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,890 - INFO - Inside escape_xml(). s = "Isadora" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "Isadora"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "20"
2025-07-09 10:51:23,891 - INFO - Looping inside convert_dict(): key="idade", val="20", type(val)="int"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,891 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,891 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,891 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,891 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,891 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,892 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,892 - INFO - Inside unicode_me(). val = "20"
2025-07-09 10:51:23,892 - INFO - Inside convert_kv(): key="idade", val="20", type(val) is: "int"
2025-07-09 10:51:23,892 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,892 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,892 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,892 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,892 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,892 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,892 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,893 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,893 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,893 - INFO - Inside escape_xml(). s = "20" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,893 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,893 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,893 - INFO - Looping inside convert_dict(): key="sexo", val="Feminino", type(val)="str"
2025-07-09 10:51:23,893 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,893 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,893 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,893 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,893 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,894 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,894 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,894 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,894 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,894 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,894 - INFO - Inside convert_kv(): key="sexo", val="Feminino", type(val) is: "str"
2025-07-09 10:51:23,894 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,894 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,894 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,895 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,895 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,895 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,895 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,895 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,895 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,895 - INFO - Inside escape_xml(). s = "Feminino" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,895 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,896 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,896 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:51:23,896 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 10:51:23,896 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,896 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,896 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,896 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,897 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,897 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,897 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,897 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,897 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,897 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:51:23,897 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 10:51:23,897 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,897 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,898 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,898 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,898 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,898 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,898 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,898 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,898 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,898 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,898 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,898 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,899 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val)="str"
2025-07-09 10:51:23,899 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,899 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,899 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,899 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,899 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,899 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,899 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,899 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,899 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,899 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,899 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val) is: "str"
2025-07-09 10:51:23,900 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,900 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,900 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,900 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,900 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,900 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,900 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,900 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,900 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,901 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.430396" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,901 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,901 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,901 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,901 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,901 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,903 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,904 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,904 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,904 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,904 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,904 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,904 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,904 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,905 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,905 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,905 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,905 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,905 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,905 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,906 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,906 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,906 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,906 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,906 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,906 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,906 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,906 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,906 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,906 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,907 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,907 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,907 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,907 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,907 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,907 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,908 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,908 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,908 - INFO - Inside unicode_me(). val = "{'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,908 - INFO - Looping inside convert_list(): item="{'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 10:51:23,908 - INFO - Inside unicode_me(). val = "{'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,908 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Ana', 'idade': 19, 'sexo': 'Feminino', 'idusuario': 2, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,908 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,909 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,909 - INFO - Inside unicode_me(). val = "Ana"
2025-07-09 10:51:23,909 - INFO - Looping inside convert_dict(): key="nome", val="Ana", type(val)="str"
2025-07-09 10:51:23,909 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,909 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,909 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,909 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,909 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,909 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,909 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,909 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,910 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,910 - INFO - Inside unicode_me(). val = "Ana"
2025-07-09 10:51:23,910 - INFO - Inside convert_kv(): key="nome", val="Ana", type(val) is: "str"
2025-07-09 10:51:23,910 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,910 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,910 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,910 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,910 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,910 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,910 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,910 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,910 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,911 - INFO - Inside escape_xml(). s = "Ana" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,911 - INFO - Inside unicode_me(). val = "Ana"
2025-07-09 10:51:23,911 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,911 - INFO - Inside unicode_me(). val = "19"
2025-07-09 10:51:23,911 - INFO - Looping inside convert_dict(): key="idade", val="19", type(val)="int"
2025-07-09 10:51:23,911 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,911 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,911 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,911 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,913 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,913 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,913 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,913 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,913 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,913 - INFO - Inside unicode_me(). val = "19"
2025-07-09 10:51:23,913 - INFO - Inside convert_kv(): key="idade", val="19", type(val) is: "int"
2025-07-09 10:51:23,913 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,913 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,913 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,914 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,914 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,914 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,914 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,914 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,914 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,914 - INFO - Inside escape_xml(). s = "19" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,914 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,914 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,914 - INFO - Looping inside convert_dict(): key="sexo", val="Feminino", type(val)="str"
2025-07-09 10:51:23,914 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,915 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,915 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,915 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,915 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,915 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,915 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,915 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,915 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,915 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,916 - INFO - Inside convert_kv(): key="sexo", val="Feminino", type(val) is: "str"
2025-07-09 10:51:23,916 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,916 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,916 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,916 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,916 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,916 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,916 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,916 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,916 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,916 - INFO - Inside escape_xml(). s = "Feminino" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,916 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,916 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "2"
2025-07-09 10:51:23,917 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,917 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,917 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,917 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,917 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,917 - INFO - Inside unicode_me(). val = "2"
2025-07-09 10:51:23,919 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-09 10:51:23,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,919 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,919 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,919 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,919 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,919 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,919 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,919 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,919 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,920 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,920 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val)="str"
2025-07-09 10:51:23,920 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,920 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,920 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,920 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,920 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,920 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,920 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,920 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,921 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,921 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,921 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val) is: "str"
2025-07-09 10:51:23,921 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,921 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,921 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,921 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,921 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,921 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,921 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,921 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,921 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,921 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.430396" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,922 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,922 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,922 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,922 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,922 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,922 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,924 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,924 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,924 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,924 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,924 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,924 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,924 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,924 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,925 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,925 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,925 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,925 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,925 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,925 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,925 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,925 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,925 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,926 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,926 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,926 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,926 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,926 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,926 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,926 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,926 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,926 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,926 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,926 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,927 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,927 - INFO - Inside unicode_me(). val = "{'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,927 - INFO - Looping inside convert_list(): item="{'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 10:51:23,927 - INFO - Inside unicode_me(). val = "{'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,927 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Bruno', 'idade': 22, 'sexo': 'Masculino', 'idusuario': 3, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,927 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,927 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,927 - INFO - Inside unicode_me(). val = "Bruno"
2025-07-09 10:51:23,928 - INFO - Looping inside convert_dict(): key="nome", val="Bruno", type(val)="str"
2025-07-09 10:51:23,928 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,928 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,928 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,928 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,928 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,928 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,928 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,928 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,928 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,929 - INFO - Inside unicode_me(). val = "Bruno"
2025-07-09 10:51:23,929 - INFO - Inside convert_kv(): key="nome", val="Bruno", type(val) is: "str"
2025-07-09 10:51:23,929 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,929 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,929 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,930 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,930 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,930 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,930 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,930 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,930 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,930 - INFO - Inside escape_xml(). s = "Bruno" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,931 - INFO - Inside unicode_me(). val = "Bruno"
2025-07-09 10:51:23,931 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,931 - INFO - Inside unicode_me(). val = "22"
2025-07-09 10:51:23,931 - INFO - Looping inside convert_dict(): key="idade", val="22", type(val)="int"
2025-07-09 10:51:23,931 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,931 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,931 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,932 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,932 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,932 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,932 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,932 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,932 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,932 - INFO - Inside unicode_me(). val = "22"
2025-07-09 10:51:23,933 - INFO - Inside convert_kv(): key="idade", val="22", type(val) is: "int"
2025-07-09 10:51:23,933 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,933 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,933 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,933 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,933 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,933 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,933 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,934 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,934 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,934 - INFO - Inside escape_xml(). s = "22" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,934 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,934 - INFO - Inside unicode_me(). val = "Masculino"
2025-07-09 10:51:23,934 - INFO - Looping inside convert_dict(): key="sexo", val="Masculino", type(val)="str"
2025-07-09 10:51:23,934 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,935 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,935 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,935 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,935 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,935 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,935 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,935 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,936 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,936 - INFO - Inside unicode_me(). val = "Masculino"
2025-07-09 10:51:23,936 - INFO - Inside convert_kv(): key="sexo", val="Masculino", type(val) is: "str"
2025-07-09 10:51:23,936 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,936 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,936 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,936 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,936 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,937 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,937 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,937 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,937 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,937 - INFO - Inside escape_xml(). s = "Masculino" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,937 - INFO - Inside unicode_me(). val = "Masculino"
2025-07-09 10:51:23,938 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,938 - INFO - Inside unicode_me(). val = "3"
2025-07-09 10:51:23,938 - INFO - Looping inside convert_dict(): key="idusuario", val="3", type(val)="int"
2025-07-09 10:51:23,938 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,938 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,938 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,938 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,938 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,938 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,939 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,939 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,939 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,939 - INFO - Inside unicode_me(). val = "3"
2025-07-09 10:51:23,939 - INFO - Inside convert_kv(): key="idusuario", val="3", type(val) is: "int"
2025-07-09 10:51:23,939 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,939 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,939 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,939 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,940 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,940 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,940 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,940 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,940 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,940 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,940 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,940 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,940 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val)="str"
2025-07-09 10:51:23,941 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,941 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,941 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,941 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,941 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,941 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,941 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,941 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,942 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,942 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val) is: "str"
2025-07-09 10:51:23,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,942 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,942 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,942 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,942 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,942 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,944 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,944 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.430396" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,944 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,944 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,944 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,944 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,944 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,944 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,944 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,945 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,945 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,945 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,945 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,945 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,945 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,945 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,945 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,945 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,946 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,946 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,946 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,946 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,946 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,946 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,946 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,946 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,947 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,947 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,947 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,948 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,948 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,948 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,948 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,948 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,948 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,948 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,949 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,949 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,949 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,949 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,949 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,949 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,949 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,949 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,950 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,950 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,950 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,950 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,950 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,950 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,950 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,950 - INFO - Inside unicode_me(). val = "{'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,950 - INFO - Looping inside convert_list(): item="{'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 10:51:23,951 - INFO - Inside unicode_me(). val = "{'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,951 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'João', 'idade': 25, 'sexo': 'Masculino', 'idusuario': 4, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,951 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,951 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,951 - INFO - Inside unicode_me(). val = "João"
2025-07-09 10:51:23,951 - INFO - Looping inside convert_dict(): key="nome", val="João", type(val)="str"
2025-07-09 10:51:23,951 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,951 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,951 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,952 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,952 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,952 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,952 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,952 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,952 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,952 - INFO - Inside unicode_me(). val = "João"
2025-07-09 10:51:23,952 - INFO - Inside convert_kv(): key="nome", val="João", type(val) is: "str"
2025-07-09 10:51:23,952 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,953 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,953 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,953 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,953 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,953 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,953 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,953 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,953 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,953 - INFO - Inside escape_xml(). s = "João" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,954 - INFO - Inside unicode_me(). val = "João"
2025-07-09 10:51:23,954 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,954 - INFO - Inside unicode_me(). val = "25"
2025-07-09 10:51:23,954 - INFO - Looping inside convert_dict(): key="idade", val="25", type(val)="int"
2025-07-09 10:51:23,954 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,954 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,954 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,954 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,954 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,954 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,955 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,955 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,955 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,955 - INFO - Inside unicode_me(). val = "25"
2025-07-09 10:51:23,955 - INFO - Inside convert_kv(): key="idade", val="25", type(val) is: "int"
2025-07-09 10:51:23,955 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,955 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,955 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,955 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,956 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,956 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,956 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,956 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,956 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,956 - INFO - Inside escape_xml(). s = "25" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,956 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,956 - INFO - Inside unicode_me(). val = "Masculino"
2025-07-09 10:51:23,956 - INFO - Looping inside convert_dict(): key="sexo", val="Masculino", type(val)="str"
2025-07-09 10:51:23,957 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,957 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,957 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,957 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,957 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,957 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,957 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,957 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,958 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,958 - INFO - Inside unicode_me(). val = "Masculino"
2025-07-09 10:51:23,958 - INFO - Inside convert_kv(): key="sexo", val="Masculino", type(val) is: "str"
2025-07-09 10:51:23,958 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,958 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,958 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,958 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,958 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,958 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,958 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,959 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,959 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,959 - INFO - Inside escape_xml(). s = "Masculino" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,959 - INFO - Inside unicode_me(). val = "Masculino"
2025-07-09 10:51:23,959 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,959 - INFO - Inside unicode_me(). val = "4"
2025-07-09 10:51:23,959 - INFO - Looping inside convert_dict(): key="idusuario", val="4", type(val)="int"
2025-07-09 10:51:23,959 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,960 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,960 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,960 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,960 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,960 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,960 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,960 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,960 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,960 - INFO - Inside unicode_me(). val = "4"
2025-07-09 10:51:23,961 - INFO - Inside convert_kv(): key="idusuario", val="4", type(val) is: "int"
2025-07-09 10:51:23,961 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,961 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,961 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,961 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,961 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,961 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,961 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,961 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,962 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,962 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,962 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,962 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,962 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val)="str"
2025-07-09 10:51:23,962 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,962 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,962 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,962 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,962 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,963 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,963 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,963 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,963 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,963 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,963 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val) is: "str"
2025-07-09 10:51:23,964 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,964 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,964 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,964 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,964 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,964 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,964 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,964 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,964 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,965 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.430396" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,965 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,965 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,965 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,965 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,965 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,965 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,965 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,965 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,965 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,966 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,966 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,966 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,966 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,966 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,966 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,966 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,966 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,966 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,967 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,967 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,967 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,967 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,967 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,967 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,967 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,967 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,967 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,968 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,968 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,968 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,968 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,968 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,968 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,968 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,968 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,968 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,969 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,969 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,969 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,969 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,969 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,969 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,969 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,969 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,969 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,970 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,970 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,970 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,970 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,970 - INFO - Inside unicode_me(). val = "{'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,970 - INFO - Looping inside convert_list(): item="{'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 10:51:23,970 - INFO - Inside unicode_me(). val = "{'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,970 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Laura', 'idade': 27, 'sexo': 'Feminino', 'idusuario': 5, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:23,971 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:23,971 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,971 - INFO - Inside unicode_me(). val = "Laura"
2025-07-09 10:51:23,971 - INFO - Looping inside convert_dict(): key="nome", val="Laura", type(val)="str"
2025-07-09 10:51:23,971 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,971 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,971 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,971 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,971 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,971 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,971 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,972 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,972 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,972 - INFO - Inside unicode_me(). val = "Laura"
2025-07-09 10:51:23,972 - INFO - Inside convert_kv(): key="nome", val="Laura", type(val) is: "str"
2025-07-09 10:51:23,972 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,972 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,972 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:23,972 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,972 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,973 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,973 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:23,973 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:23,973 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,973 - INFO - Inside escape_xml(). s = "Laura" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,973 - INFO - Inside unicode_me(). val = "Laura"
2025-07-09 10:51:23,973 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,973 - INFO - Inside unicode_me(). val = "27"
2025-07-09 10:51:23,973 - INFO - Looping inside convert_dict(): key="idade", val="27", type(val)="int"
2025-07-09 10:51:23,974 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,974 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,974 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,974 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,974 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,974 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,974 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,974 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,974 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,975 - INFO - Inside unicode_me(). val = "27"
2025-07-09 10:51:23,975 - INFO - Inside convert_kv(): key="idade", val="27", type(val) is: "int"
2025-07-09 10:51:23,975 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,975 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,975 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:23,975 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,975 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,975 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,975 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:23,975 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:23,976 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,976 - INFO - Inside escape_xml(). s = "27" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,976 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,976 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,976 - INFO - Looping inside convert_dict(): key="sexo", val="Feminino", type(val)="str"
2025-07-09 10:51:23,976 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,976 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,976 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,976 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,976 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,977 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,977 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,977 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,977 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,977 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,977 - INFO - Inside convert_kv(): key="sexo", val="Feminino", type(val) is: "str"
2025-07-09 10:51:23,977 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,977 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,977 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:23,978 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,978 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,978 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,978 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:23,978 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:23,978 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,978 - INFO - Inside escape_xml(). s = "Feminino" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,978 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:23,978 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,979 - INFO - Inside unicode_me(). val = "5"
2025-07-09 10:51:23,979 - INFO - Looping inside convert_dict(): key="idusuario", val="5", type(val)="int"
2025-07-09 10:51:23,979 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,979 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,979 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,979 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,979 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,979 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,979 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,979 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,980 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,980 - INFO - Inside unicode_me(). val = "5"
2025-07-09 10:51:23,980 - INFO - Inside convert_kv(): key="idusuario", val="5", type(val) is: "int"
2025-07-09 10:51:23,980 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,980 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,980 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:23,980 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,980 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,980 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:23,981 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:23,981 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,981 - INFO - Inside escape_xml(). s = "5" and type(s) = "<class 'int'>"
2025-07-09 10:51:23,981 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,981 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,981 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val)="str"
2025-07-09 10:51:23,981 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,981 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,983 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,983 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,983 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,983 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,983 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,983 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,983 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,983 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,983 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val) is: "str"
2025-07-09 10:51:23,984 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,984 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,984 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:23,984 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,984 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,984 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,984 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:23,984 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:23,984 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,985 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.430396" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,985 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:23,985 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,985 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,985 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,985 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,985 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,985 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,985 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,985 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,986 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,986 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,986 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,986 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,986 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,986 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,986 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,986 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,986 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,987 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:23,987 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,987 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,987 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,987 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:23,987 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:23,987 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,987 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,987 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,988 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 10:51:23,988 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,988 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,988 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,988 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,988 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,988 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,988 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,988 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,989 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,989 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:23,989 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:23,989 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 10:51:23,989 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,989 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:23,990 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:23,990 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:23,990 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,990 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:23,990 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:23,990 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:23,990 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:23,991 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:51:35,520 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:51:35,522 - INFO - Realizando busca do usuário 1
2025-07-09 10:51:35,537 - INFO - Usuário 1 encontrado com sucesso
2025-07-09 10:51:35,538 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:51:48,796 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:51:48,797 - INFO - Realizando busca do usuário 1
2025-07-09 10:51:48,800 - INFO - Usuário 1 encontrado com sucesso
2025-07-09 10:51:48,800 - INFO - Inside unicode_me(). val = "{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:48,800 - INFO - Inside dicttoxml(): type(obj) is: "dict", obj="{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:48,800 - INFO - Inside unicode_me(). val = "{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:48,800 - INFO - Inside convert(). obj type is: "dict", obj="{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:48,801 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:48,801 - INFO - Inside unicode_me(). val = "{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:48,801 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Isadora', 'idade': 20, 'sexo': 'Feminino', 'idusuario': 1, 'dt_inclusao': '2025-07-09T13:47:11.430396', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 10:51:48,801 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 10:51:48,801 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,801 - INFO - Inside unicode_me(). val = "Isadora"
2025-07-09 10:51:48,801 - INFO - Looping inside convert_dict(): key="nome", val="Isadora", type(val)="str"
2025-07-09 10:51:48,801 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,801 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,801 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:48,801 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,801 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,802 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,802 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "Isadora"
2025-07-09 10:51:48,802 - INFO - Inside convert_kv(): key="nome", val="Isadora", type(val) is: "str"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,802 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 10:51:48,802 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,802 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,802 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 10:51:48,802 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 10:51:48,804 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,804 - INFO - Inside escape_xml(). s = "Isadora" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,804 - INFO - Inside unicode_me(). val = "Isadora"
2025-07-09 10:51:48,804 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,804 - INFO - Inside unicode_me(). val = "20"
2025-07-09 10:51:48,804 - INFO - Looping inside convert_dict(): key="idade", val="20", type(val)="int"
2025-07-09 10:51:48,804 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,804 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,804 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:48,805 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,805 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,805 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,805 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,805 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:48,805 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,805 - INFO - Inside unicode_me(). val = "20"
2025-07-09 10:51:48,805 - INFO - Inside convert_kv(): key="idade", val="20", type(val) is: "int"
2025-07-09 10:51:48,805 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,806 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,806 - INFO - Inside make_valid_xml_name(). Testing key "idade" with attr "{}"
2025-07-09 10:51:48,806 - INFO - Inside escape_xml(). s = "idade" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,806 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,806 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,806 - INFO - Inside unicode_me(). val = "idade"
2025-07-09 10:51:48,806 - INFO - Inside key_is_valid_xml(). Testing "idade"
2025-07-09 10:51:48,806 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,806 - INFO - Inside escape_xml(). s = "20" and type(s) = "<class 'int'>"
2025-07-09 10:51:48,807 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,807 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:48,807 - INFO - Looping inside convert_dict(): key="sexo", val="Feminino", type(val)="str"
2025-07-09 10:51:48,807 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,807 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,807 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:48,807 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,807 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,807 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,807 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,807 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:48,808 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,808 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:48,808 - INFO - Inside convert_kv(): key="sexo", val="Feminino", type(val) is: "str"
2025-07-09 10:51:48,808 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,808 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,808 - INFO - Inside make_valid_xml_name(). Testing key "sexo" with attr "{}"
2025-07-09 10:51:48,808 - INFO - Inside escape_xml(). s = "sexo" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,808 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,808 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,809 - INFO - Inside unicode_me(). val = "sexo"
2025-07-09 10:51:48,809 - INFO - Inside key_is_valid_xml(). Testing "sexo"
2025-07-09 10:51:48,809 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,809 - INFO - Inside escape_xml(). s = "Feminino" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,809 - INFO - Inside unicode_me(). val = "Feminino"
2025-07-09 10:51:48,809 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,809 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:51:48,809 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 10:51:48,809 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,810 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,810 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:48,810 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,810 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,810 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,810 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,810 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:48,811 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,811 - INFO - Inside unicode_me(). val = "1"
2025-07-09 10:51:48,811 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 10:51:48,811 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,811 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,811 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 10:51:48,811 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,811 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,811 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,811 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 10:51:48,812 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 10:51:48,812 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,812 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 10:51:48,812 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,812 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:48,812 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val)="str"
2025-07-09 10:51:48,812 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,812 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,812 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:48,813 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,813 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,813 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,813 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,813 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:48,813 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,813 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:48,813 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.430396", type(val) is: "str"
2025-07-09 10:51:48,813 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,814 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,814 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 10:51:48,814 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,814 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,814 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,814 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 10:51:48,814 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 10:51:48,814 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,814 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.430396" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,814 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.430396"
2025-07-09 10:51:48,815 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,815 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:48,815 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 10:51:48,815 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,815 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,815 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:48,815 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,815 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,815 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,815 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,816 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:48,816 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,816 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:48,816 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:48,816 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 10:51:48,816 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,816 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,816 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 10:51:48,816 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,817 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,817 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,817 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 10:51:48,817 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 10:51:48,817 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,817 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,817 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:48,817 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 10:51:48,817 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,818 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:48,818 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,818 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,818 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "None"
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "False"
2025-07-09 10:51:48,818 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 10:51:48,818 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,819 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 10:51:48,819 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 10:51:48,819 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 10:51:48,819 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,819 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 10:51:48,819 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 10:51:48,819 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 10:51:48,819 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 10:51:48,820 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:51:56,978 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:51:56,979 - DEBUG - Realizando a busca de todos os usuários
2025-07-09 10:51:56,983 - INFO - 5 usuários encontrados com sucesso
2025-07-09 10:51:56,985 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:52:07,037 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:52:07,038 - INFO - Realizando busca do usuário 1
2025-07-09 10:52:07,041 - INFO - Usuário 1 encontrado com sucesso
2025-07-09 10:52:07,041 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:52:55,941 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:52:55,956 - DEBUG - Atualizando usuário 2 com novos dados: {'idade': 21}
2025-07-09 10:52:55,976 - INFO - Usuário 2 atualizado com sucesso
2025-07-09 10:52:55,977 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:53:05,446 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:53:05,446 - INFO - Realizando busca do usuário 2
2025-07-09 10:53:05,449 - INFO - Usuário 2 encontrado com sucesso
2025-07-09 10:53:05,450 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:54:00,602 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:54:00,602 - DEBUG - Atualizando usuário 3 com novos dados: {'nome': 'Pedro', 'idade': 19}
2025-07-09 10:54:00,615 - INFO - Usuário 3 atualizado com sucesso
2025-07-09 10:54:00,615 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:54:11,202 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:54:11,203 - INFO - Realizando busca do usuário 3
2025-07-09 10:54:11,206 - INFO - Usuário 3 encontrado com sucesso
2025-07-09 10:54:11,207 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:54:36,394 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:54:36,394 - DEBUG - Deletando usuário 5
2025-07-09 10:54:36,405 - INFO - usuário 5 foi marcado como deletado
2025-07-09 10:54:36,406 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:54:45,476 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:54:45,477 - DEBUG - Realizando a busca de todos os usuários
2025-07-09 10:54:45,482 - INFO - 4 usuários encontrados com sucesso
2025-07-09 10:54:45,483 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:54:59,644 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:54:59,645 - INFO - Realizando busca do usuário 5
2025-07-09 10:54:59,648 - WARNING - Usuário 5 não foi encontrado
2025-07-09 10:54:59,650 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:56:30,160 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:56:30,165 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10}
2025-07-09 10:56:30,182 - INFO - Tarefa 1 foi criada com sucesso
2025-07-09 10:56:30,182 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:57:33,587 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:57:33,589 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5}
2025-07-09 10:57:33,603 - INFO - Tarefa 2 foi criada com sucesso
2025-07-09 10:57:33,603 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:58:18,562 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:58:18,563 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7}
2025-07-09 10:58:18,579 - INFO - Tarefa 3 foi criada com sucesso
2025-07-09 10:58:18,579 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:58:48,284 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:58:48,285 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6}
2025-07-09 10:58:48,295 - INFO - Tarefa 4 foi criada com sucesso
2025-07-09 10:58:48,296 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 10:59:33,341 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 10:59:33,342 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2}
2025-07-09 10:59:33,352 - INFO - Tarefa 5 foi criada com sucesso
2025-07-09 10:59:33,353 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:00:03,103 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:00:03,104 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4}
2025-07-09 11:00:03,162 - INFO - Tarefa 6 foi criada com sucesso
2025-07-09 11:00:03,163 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:01:20,133 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:01:20,134 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4}
2025-07-09 11:01:20,151 - INFO - Tarefa 7 foi criada com sucesso
2025-07-09 11:01:20,152 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:02:05,552 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:02:05,553 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2}
2025-07-09 11:02:05,566 - INFO - Tarefa 8 foi criada com sucesso
2025-07-09 11:02:05,567 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:02:34,273 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:02:34,281 - DEBUG - Realizando a busca de todas as tarefas
2025-07-09 11:02:34,287 - INFO - 8 tarefas encontradas com sucesso
2025-07-09 11:02:34,288 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:02:50,670 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:02:50,672 - DEBUG - Realizando a busca de todas as tarefas
2025-07-09 11:02:50,675 - INFO - 8 tarefas encontradas com sucesso
2025-07-09 11:02:50,675 - INFO - Inside unicode_me(). val = "[{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:02:50,676 - INFO - Inside dicttoxml(): type(obj) is: "list", obj="[{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:02:50,676 - INFO - Inside unicode_me(). val = "[{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:02:50,676 - INFO - Inside convert(). obj type is: "list", obj="[{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}, {'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:02:50,676 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,676 - INFO - Inside convert_list()
2025-07-09 11:02:50,676 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,676 - INFO - Inside unicode_me(). val = "{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,676 - INFO - Looping inside convert_list(): item="{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,677 - INFO - Inside unicode_me(). val = "{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,677 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,677 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,677 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,677 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:02:50,677 - INFO - Looping inside convert_dict(): key="titulo", val="Hackathon", type(val)="str"
2025-07-09 11:02:50,677 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,677 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,677 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,677 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,677 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,677 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,678 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,678 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,678 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,678 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:02:50,678 - INFO - Inside convert_kv(): key="titulo", val="Hackathon", type(val) is: "str"
2025-07-09 11:02:50,678 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,678 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,679 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,679 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,679 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,679 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,679 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,679 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,679 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,679 - INFO - Inside escape_xml(). s = "Hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,679 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:02:50,679 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,679 - INFO - Inside unicode_me(). val = "Participar de um evento intensivo de hackathon"
2025-07-09 11:02:50,679 - INFO - Looping inside convert_dict(): key="descricao", val="Participar de um evento intensivo de hackathon", type(val)="str"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,680 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,680 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,680 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,680 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "Participar de um evento intensivo de hackathon"
2025-07-09 11:02:50,680 - INFO - Inside convert_kv(): key="descricao", val="Participar de um evento intensivo de hackathon", type(val) is: "str"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,680 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,680 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,681 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,681 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,681 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,681 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,681 - INFO - Inside escape_xml(). s = "Participar de um evento intensivo de hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "Participar de um evento intensivo de hackathon"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "10"
2025-07-09 11:02:50,681 - INFO - Looping inside convert_dict(): key="pontos", val="10", type(val)="int"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,681 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,681 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,681 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,682 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,682 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "10"
2025-07-09 11:02:50,682 - INFO - Inside convert_kv(): key="pontos", val="10", type(val) is: "int"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,682 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,682 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,682 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,682 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,682 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,683 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,683 - INFO - Inside escape_xml(). s = "10" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,683 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,683 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:02:50,683 - INFO - Looping inside convert_dict(): key="idtarefa", val="1", type(val)="int"
2025-07-09 11:02:50,683 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,683 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,683 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,683 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,683 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,683 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,683 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,684 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,684 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,684 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:02:50,684 - INFO - Inside convert_kv(): key="idtarefa", val="1", type(val) is: "int"
2025-07-09 11:02:50,684 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,684 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,684 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,684 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,684 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,685 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,685 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,685 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,685 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,685 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,685 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,685 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,685 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,685 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,685 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,686 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,686 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,686 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,686 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,686 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,686 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,686 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,686 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,687 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,687 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,687 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,687 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,687 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,687 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,687 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,687 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,687 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,688 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,688 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,688 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,688 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,688 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,688 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,688 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,689 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,689 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,689 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,689 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,689 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,689 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,689 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,690 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,690 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,690 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,690 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,690 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,690 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,690 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,690 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,690 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,690 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,690 - INFO - Inside unicode_me(). val = "{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,690 - INFO - Looping inside convert_list(): item="{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,690 - INFO - Inside unicode_me(). val = "{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,690 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a primeira fase da olimpíada de matemática ', 'pontos': 5, 'idtarefa': 2, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,691 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "Olimpíada de matemática"
2025-07-09 11:02:50,691 - INFO - Looping inside convert_dict(): key="titulo", val="Olimpíada de matemática", type(val)="str"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,691 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,691 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,691 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,691 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,691 - INFO - Inside unicode_me(). val = "Olimpíada de matemática"
2025-07-09 11:02:50,691 - INFO - Inside convert_kv(): key="titulo", val="Olimpíada de matemática", type(val) is: "str"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,692 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,692 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,692 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,692 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,692 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,692 - INFO - Inside escape_xml(). s = "Olimpíada de matemática" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "Olimpíada de matemática"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,692 - INFO - Inside unicode_me(). val = "Concluir a primeira fase da olimpíada de matemática "
2025-07-09 11:02:50,693 - INFO - Looping inside convert_dict(): key="descricao", val="Concluir a primeira fase da olimpíada de matemática ", type(val)="str"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,693 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,693 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,693 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,693 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "Concluir a primeira fase da olimpíada de matemática "
2025-07-09 11:02:50,693 - INFO - Inside convert_kv(): key="descricao", val="Concluir a primeira fase da olimpíada de matemática ", type(val) is: "str"
2025-07-09 11:02:50,693 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,694 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,694 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,694 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,694 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,694 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,694 - INFO - Inside escape_xml(). s = "Concluir a primeira fase da olimpíada de matemática " and type(s) = "<class 'str'>"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "Concluir a primeira fase da olimpíada de matemática "
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:02:50,694 - INFO - Looping inside convert_dict(): key="pontos", val="5", type(val)="int"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,694 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,695 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,695 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,695 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,695 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:02:50,695 - INFO - Inside convert_kv(): key="pontos", val="5", type(val) is: "int"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,695 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,695 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,695 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,695 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,696 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,696 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,696 - INFO - Inside escape_xml(). s = "5" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:02:50,696 - INFO - Looping inside convert_dict(): key="idtarefa", val="2", type(val)="int"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,696 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,696 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,696 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,696 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,696 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:02:50,697 - INFO - Inside convert_kv(): key="idtarefa", val="2", type(val) is: "int"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,697 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,697 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,697 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,697 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,697 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,697 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,697 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,698 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,698 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,698 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,698 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,698 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,698 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,698 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,698 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,698 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,698 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,699 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,699 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,699 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,699 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,699 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,699 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,699 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,699 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,700 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,700 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,700 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,700 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,700 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,700 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,701 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,701 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,701 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,701 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,701 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,701 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,701 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,701 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,702 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,702 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,702 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,702 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,702 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,702 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,702 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,703 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,703 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,703 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,703 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,703 - INFO - Looping inside convert_list(): item="{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,703 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Olimpíada de matemática', 'descricao': 'Concluir a segunda fase da olimpíada ', 'pontos': 7, 'idtarefa': 3, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,703 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "Olimpíada de matemática"
2025-07-09 11:02:50,703 - INFO - Looping inside convert_dict(): key="titulo", val="Olimpíada de matemática", type(val)="str"
2025-07-09 11:02:50,703 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,704 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,704 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,704 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,704 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "Olimpíada de matemática"
2025-07-09 11:02:50,704 - INFO - Inside convert_kv(): key="titulo", val="Olimpíada de matemática", type(val) is: "str"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,704 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,704 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,704 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,705 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,705 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,705 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,705 - INFO - Inside escape_xml(). s = "Olimpíada de matemática" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "Olimpíada de matemática"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "Concluir a segunda fase da olimpíada "
2025-07-09 11:02:50,705 - INFO - Looping inside convert_dict(): key="descricao", val="Concluir a segunda fase da olimpíada ", type(val)="str"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,705 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,705 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,705 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,706 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,706 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "Concluir a segunda fase da olimpíada "
2025-07-09 11:02:50,706 - INFO - Inside convert_kv(): key="descricao", val="Concluir a segunda fase da olimpíada ", type(val) is: "str"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,706 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,706 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,706 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,706 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,706 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,707 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,707 - INFO - Inside escape_xml(). s = "Concluir a segunda fase da olimpíada " and type(s) = "<class 'str'>"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "Concluir a segunda fase da olimpíada "
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:02:50,707 - INFO - Looping inside convert_dict(): key="pontos", val="7", type(val)="int"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,707 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,707 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,707 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,707 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,707 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:02:50,708 - INFO - Inside convert_kv(): key="pontos", val="7", type(val) is: "int"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,708 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,708 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,708 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,708 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,708 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,708 - INFO - Inside escape_xml(). s = "7" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:02:50,708 - INFO - Looping inside convert_dict(): key="idtarefa", val="3", type(val)="int"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,708 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,708 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,708 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,708 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:02:50,709 - INFO - Inside convert_kv(): key="idtarefa", val="3", type(val) is: "int"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,709 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,709 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,709 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,709 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,709 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,710 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,710 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,710 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,710 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,710 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,710 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,710 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,711 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,711 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,711 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,711 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,711 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,711 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,711 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,711 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,712 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,712 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,712 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,712 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,712 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,712 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,712 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,712 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,713 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,713 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,713 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,713 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,713 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,713 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,713 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,713 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,714 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,714 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,714 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,714 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,714 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,714 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,714 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,715 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "{'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,715 - INFO - Looping inside convert_list(): item="{'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "{'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,715 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'API python', 'descricao': 'Realizar uma API utilizando linguagem de programação python', 'pontos': 6, 'idtarefa': 4, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,715 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "API python"
2025-07-09 11:02:50,715 - INFO - Looping inside convert_dict(): key="titulo", val="API python", type(val)="str"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,715 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,715 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,715 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,715 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,716 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "API python"
2025-07-09 11:02:50,716 - INFO - Inside convert_kv(): key="titulo", val="API python", type(val) is: "str"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,716 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,716 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,716 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,716 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,716 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,717 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,717 - INFO - Inside escape_xml(). s = "API python" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,717 - INFO - Inside unicode_me(). val = "API python"
2025-07-09 11:02:50,717 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,717 - INFO - Inside unicode_me(). val = "Realizar uma API utilizando linguagem de programação python"
2025-07-09 11:02:50,717 - INFO - Looping inside convert_dict(): key="descricao", val="Realizar uma API utilizando linguagem de programação python", type(val)="str"
2025-07-09 11:02:50,717 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,717 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,717 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,717 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,717 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,717 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,718 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "Realizar uma API utilizando linguagem de programação python"
2025-07-09 11:02:50,718 - INFO - Inside convert_kv(): key="descricao", val="Realizar uma API utilizando linguagem de programação python", type(val) is: "str"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,718 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,718 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,718 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,718 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,718 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,719 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,719 - INFO - Inside escape_xml(). s = "Realizar uma API utilizando linguagem de programação python" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "Realizar uma API utilizando linguagem de programação python"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:02:50,719 - INFO - Looping inside convert_dict(): key="pontos", val="6", type(val)="int"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,719 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,719 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,719 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,719 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,719 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:02:50,720 - INFO - Inside convert_kv(): key="pontos", val="6", type(val) is: "int"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,720 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,720 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,720 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,720 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,720 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,720 - INFO - Inside escape_xml(). s = "6" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,720 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:02:50,721 - INFO - Looping inside convert_dict(): key="idtarefa", val="4", type(val)="int"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,721 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,721 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,721 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,721 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:02:50,721 - INFO - Inside convert_kv(): key="idtarefa", val="4", type(val) is: "int"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,721 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,721 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,722 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,722 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,722 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,722 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,722 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,722 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,722 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,722 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,722 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,722 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,723 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,723 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,723 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,723 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,723 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,724 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,724 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,724 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,724 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,724 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,724 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,724 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,725 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,725 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,725 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,725 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,725 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,725 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,725 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,725 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,726 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,726 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,726 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,726 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,726 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,726 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,726 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,726 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,727 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,727 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,727 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,727 - INFO - Looping inside convert_list(): item="{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,727 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso básico sobre Apache Airflow', 'pontos': 2, 'idtarefa': 5, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,727 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "Apache AirFlow"
2025-07-09 11:02:50,727 - INFO - Looping inside convert_dict(): key="titulo", val="Apache AirFlow", type(val)="str"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,727 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,728 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,728 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,728 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,728 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "Apache AirFlow"
2025-07-09 11:02:50,728 - INFO - Inside convert_kv(): key="titulo", val="Apache AirFlow", type(val) is: "str"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,728 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,728 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,728 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,728 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,729 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,729 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,729 - INFO - Inside escape_xml(). s = "Apache AirFlow" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "Apache AirFlow"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "Concluir um curso básico sobre Apache Airflow"
2025-07-09 11:02:50,729 - INFO - Looping inside convert_dict(): key="descricao", val="Concluir um curso básico sobre Apache Airflow", type(val)="str"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,729 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,729 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,729 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,730 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,730 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "Concluir um curso básico sobre Apache Airflow"
2025-07-09 11:02:50,730 - INFO - Inside convert_kv(): key="descricao", val="Concluir um curso básico sobre Apache Airflow", type(val) is: "str"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,730 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,730 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,730 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,730 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,730 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,731 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,731 - INFO - Inside escape_xml(). s = "Concluir um curso básico sobre Apache Airflow" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "Concluir um curso básico sobre Apache Airflow"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:02:50,731 - INFO - Looping inside convert_dict(): key="pontos", val="2", type(val)="int"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,731 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,731 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,731 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,731 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,731 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:02:50,732 - INFO - Inside convert_kv(): key="pontos", val="2", type(val) is: "int"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,732 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,732 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,732 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,732 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,732 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,732 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,732 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:02:50,732 - INFO - Looping inside convert_dict(): key="idtarefa", val="5", type(val)="int"
2025-07-09 11:02:50,733 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,733 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,733 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,733 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,733 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,733 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,733 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,733 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,733 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,733 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:02:50,734 - INFO - Inside convert_kv(): key="idtarefa", val="5", type(val) is: "int"
2025-07-09 11:02:50,734 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,734 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,734 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,734 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,734 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,734 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,734 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,734 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,734 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,734 - INFO - Inside escape_xml(). s = "5" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,734 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,734 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,734 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,735 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,735 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,735 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,735 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,735 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,735 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,735 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,735 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,736 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,736 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,736 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,736 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,736 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,736 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,736 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,736 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,737 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,737 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,737 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,737 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,737 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,738 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,738 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,738 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,738 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,738 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,738 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,738 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,738 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,738 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,738 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,738 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,738 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,739 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,739 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,739 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,739 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,739 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,739 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,739 - INFO - Inside unicode_me(). val = "{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,740 - INFO - Looping inside convert_list(): item="{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,740 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Apache AirFlow', 'descricao': 'Concluir um curso avançado sobre Apache Airflow', 'pontos': 4, 'idtarefa': 6, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,740 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "Apache AirFlow"
2025-07-09 11:02:50,740 - INFO - Looping inside convert_dict(): key="titulo", val="Apache AirFlow", type(val)="str"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,740 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,740 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,740 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,740 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "Apache AirFlow"
2025-07-09 11:02:50,741 - INFO - Inside convert_kv(): key="titulo", val="Apache AirFlow", type(val) is: "str"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,741 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,741 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,741 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,741 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,741 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,741 - INFO - Inside escape_xml(). s = "Apache AirFlow" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "Apache AirFlow"
2025-07-09 11:02:50,741 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "Concluir um curso avançado sobre Apache Airflow"
2025-07-09 11:02:50,742 - INFO - Looping inside convert_dict(): key="descricao", val="Concluir um curso avançado sobre Apache Airflow", type(val)="str"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,742 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,742 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,742 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,742 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "Concluir um curso avançado sobre Apache Airflow"
2025-07-09 11:02:50,742 - INFO - Inside convert_kv(): key="descricao", val="Concluir um curso avançado sobre Apache Airflow", type(val) is: "str"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,742 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,743 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,743 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,743 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,743 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,743 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,743 - INFO - Inside escape_xml(). s = "Concluir um curso avançado sobre Apache Airflow" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "Concluir um curso avançado sobre Apache Airflow"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:02:50,743 - INFO - Looping inside convert_dict(): key="pontos", val="4", type(val)="int"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,743 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,744 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,744 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,744 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,744 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:02:50,744 - INFO - Inside convert_kv(): key="pontos", val="4", type(val) is: "int"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,744 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,744 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,744 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,745 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,745 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,745 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,745 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,747 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,747 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:02:50,747 - INFO - Looping inside convert_dict(): key="idtarefa", val="6", type(val)="int"
2025-07-09 11:02:50,747 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,747 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,747 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,748 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,748 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,748 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,748 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,748 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,749 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,749 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:02:50,749 - INFO - Inside convert_kv(): key="idtarefa", val="6", type(val) is: "int"
2025-07-09 11:02:50,749 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,749 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,749 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,749 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,750 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,750 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,750 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,750 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,750 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,750 - INFO - Inside escape_xml(). s = "6" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,750 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,750 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,751 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,751 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,751 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,751 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,751 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,751 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,751 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,751 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,751 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,751 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,751 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,751 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,752 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,752 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,752 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,752 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,752 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,752 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,752 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,752 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,752 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,752 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,752 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,752 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,753 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,753 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,753 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,753 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,753 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,753 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,753 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,754 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,754 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,754 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,754 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,754 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,754 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,754 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,754 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,754 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,755 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,755 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,755 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,755 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,755 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,755 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,755 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,756 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,756 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,756 - INFO - Inside unicode_me(). val = "{'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,756 - INFO - Looping inside convert_list(): item="{'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,756 - INFO - Inside unicode_me(). val = "{'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,756 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'ETL', 'descricao': 'Participar de uma imersão sobre ETL', 'pontos': 4, 'idtarefa': 7, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,756 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,756 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,756 - INFO - Inside unicode_me(). val = "ETL"
2025-07-09 11:02:50,756 - INFO - Looping inside convert_dict(): key="titulo", val="ETL", type(val)="str"
2025-07-09 11:02:50,756 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,756 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,756 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,756 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,757 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,757 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "ETL"
2025-07-09 11:02:50,757 - INFO - Inside convert_kv(): key="titulo", val="ETL", type(val) is: "str"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,757 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,757 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,757 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,757 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,757 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,758 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,758 - INFO - Inside escape_xml(). s = "ETL" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "ETL"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "Participar de uma imersão sobre ETL"
2025-07-09 11:02:50,758 - INFO - Looping inside convert_dict(): key="descricao", val="Participar de uma imersão sobre ETL", type(val)="str"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,758 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,758 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,758 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,758 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,758 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "Participar de uma imersão sobre ETL"
2025-07-09 11:02:50,759 - INFO - Inside convert_kv(): key="descricao", val="Participar de uma imersão sobre ETL", type(val) is: "str"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,759 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,759 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,759 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,759 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,759 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,759 - INFO - Inside escape_xml(). s = "Participar de uma imersão sobre ETL" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,759 - INFO - Inside unicode_me(). val = "Participar de uma imersão sobre ETL"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:02:50,760 - INFO - Looping inside convert_dict(): key="pontos", val="4", type(val)="int"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,760 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,760 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,760 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,760 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:02:50,760 - INFO - Inside convert_kv(): key="pontos", val="4", type(val) is: "int"
2025-07-09 11:02:50,760 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,761 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,761 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,761 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,761 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,761 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,761 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,761 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,761 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,761 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,761 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,761 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:02:50,761 - INFO - Looping inside convert_dict(): key="idtarefa", val="7", type(val)="int"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,762 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,762 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,762 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,762 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:02:50,762 - INFO - Inside convert_kv(): key="idtarefa", val="7", type(val) is: "int"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,762 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,762 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,763 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,763 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,763 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,763 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,763 - INFO - Inside escape_xml(). s = "7" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,763 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,763 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,763 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,763 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,764 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,764 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,764 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,764 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,764 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,765 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,765 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,765 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,765 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,765 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,765 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,765 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,765 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,766 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,766 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,766 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,766 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,766 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,766 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,767 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,767 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,767 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,767 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,767 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,767 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,767 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,767 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,767 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,767 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,767 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,768 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,768 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,768 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,768 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,768 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,768 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,768 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,769 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "{'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,769 - INFO - Looping inside convert_list(): item="{'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "{'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,769 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Leitura', 'descricao': 'Realizar leitura de um livro da area de tecnologia', 'pontos': 2, 'idtarefa': 8, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:02:50,769 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:02:50,769 - INFO - Looping inside convert_dict(): key="titulo", val="Leitura", type(val)="str"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,769 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,769 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,769 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,769 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,770 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:02:50,770 - INFO - Inside convert_kv(): key="titulo", val="Leitura", type(val) is: "str"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,770 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:02:50,770 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,770 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,770 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:02:50,770 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:02:50,771 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,771 - INFO - Inside escape_xml(). s = "Leitura" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "Realizar leitura de um livro da area de tecnologia"
2025-07-09 11:02:50,771 - INFO - Looping inside convert_dict(): key="descricao", val="Realizar leitura de um livro da area de tecnologia", type(val)="str"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,771 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,771 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,771 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,771 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,771 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "Realizar leitura de um livro da area de tecnologia"
2025-07-09 11:02:50,772 - INFO - Inside convert_kv(): key="descricao", val="Realizar leitura de um livro da area de tecnologia", type(val) is: "str"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,772 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:02:50,772 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,772 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:02:50,772 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:02:50,772 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,772 - INFO - Inside escape_xml(). s = "Realizar leitura de um livro da area de tecnologia" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "Realizar leitura de um livro da area de tecnologia"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,772 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:02:50,773 - INFO - Looping inside convert_dict(): key="pontos", val="2", type(val)="int"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,773 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,773 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,773 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,773 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:02:50,773 - INFO - Inside convert_kv(): key="pontos", val="2", type(val) is: "int"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,773 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,773 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:02:50,774 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,774 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:02:50,774 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:02:50,774 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,774 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:02:50,774 - INFO - Looping inside convert_dict(): key="idtarefa", val="8", type(val)="int"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,774 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,774 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,774 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:02:50,775 - INFO - Inside convert_kv(): key="idtarefa", val="8", type(val) is: "int"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,775 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:02:50,775 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,775 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:02:50,775 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:02:50,776 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,776 - INFO - Inside escape_xml(). s = "8" and type(s) = "<class 'int'>"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,776 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,776 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,776 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,776 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,776 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,776 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,777 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,777 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:02:50,777 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,777 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:02:50,777 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:02:50,777 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,777 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,777 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,778 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,778 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,778 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,778 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,778 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,778 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,778 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,778 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:02:50,779 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,779 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:02:50,779 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:02:50,779 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,779 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,779 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,779 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,779 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,779 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,780 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:02:50,780 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:02:50,780 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:02:50,780 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,780 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:02:50,780 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:02:50,780 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:02:50,781 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:02:50,781 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:03:17,867 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:03:17,875 - INFO - Realizando busca da tarefa 1
2025-07-09 11:03:17,877 - INFO - Tarefa 1 encontrada com sucesso
2025-07-09 11:03:17,877 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:03:26,732 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:03:26,738 - INFO - Realizando busca da tarefa 1
2025-07-09 11:03:26,739 - INFO - Tarefa 1 encontrada com sucesso
2025-07-09 11:03:26,739 - INFO - Inside unicode_me(). val = "{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:03:26,739 - INFO - Inside dicttoxml(): type(obj) is: "dict", obj="{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:03:26,739 - INFO - Inside unicode_me(). val = "{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:03:26,739 - INFO - Inside convert(). obj type is: "dict", obj="{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:03:26,740 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:03:26,740 - INFO - Inside unicode_me(). val = "{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:03:26,740 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'titulo': 'Hackathon', 'descricao': 'Participar de um evento intensivo de hackathon', 'pontos': 10, 'idtarefa': 1, 'dt_inclusao': '2025-07-09T13:47:11.436102', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:03:26,740 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:03:26,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,740 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:03:26,740 - INFO - Looping inside convert_dict(): key="titulo", val="Hackathon", type(val)="str"
2025-07-09 11:03:26,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,740 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,740 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:03:26,740 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,740 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,740 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,741 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:03:26,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,741 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:03:26,741 - INFO - Inside convert_kv(): key="titulo", val="Hackathon", type(val) is: "str"
2025-07-09 11:03:26,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,741 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,741 - INFO - Inside make_valid_xml_name(). Testing key "titulo" with attr "{}"
2025-07-09 11:03:26,741 - INFO - Inside escape_xml(). s = "titulo" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,741 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,741 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "titulo"
2025-07-09 11:03:26,742 - INFO - Inside key_is_valid_xml(). Testing "titulo"
2025-07-09 11:03:26,742 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,742 - INFO - Inside escape_xml(). s = "Hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "Participar de um evento intensivo de hackathon"
2025-07-09 11:03:26,742 - INFO - Looping inside convert_dict(): key="descricao", val="Participar de um evento intensivo de hackathon", type(val)="str"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,742 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:03:26,742 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,742 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,742 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,743 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "Participar de um evento intensivo de hackathon"
2025-07-09 11:03:26,743 - INFO - Inside convert_kv(): key="descricao", val="Participar de um evento intensivo de hackathon", type(val) is: "str"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,743 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:03:26,743 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,743 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,743 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:03:26,743 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:03:26,743 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,744 - INFO - Inside escape_xml(). s = "Participar de um evento intensivo de hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "Participar de um evento intensivo de hackathon"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "10"
2025-07-09 11:03:26,744 - INFO - Looping inside convert_dict(): key="pontos", val="10", type(val)="int"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,744 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:03:26,744 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,744 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,744 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,744 - INFO - Inside unicode_me(). val = "10"
2025-07-09 11:03:26,744 - INFO - Inside convert_kv(): key="pontos", val="10", type(val) is: "int"
2025-07-09 11:03:26,745 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,745 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,745 - INFO - Inside make_valid_xml_name(). Testing key "pontos" with attr "{}"
2025-07-09 11:03:26,745 - INFO - Inside escape_xml(). s = "pontos" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,745 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,745 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,745 - INFO - Inside unicode_me(). val = "pontos"
2025-07-09 11:03:26,745 - INFO - Inside key_is_valid_xml(). Testing "pontos"
2025-07-09 11:03:26,746 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,746 - INFO - Inside escape_xml(). s = "10" and type(s) = "<class 'int'>"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:03:26,746 - INFO - Looping inside convert_dict(): key="idtarefa", val="1", type(val)="int"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,746 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:03:26,746 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,746 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,746 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:03:26,746 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:03:26,747 - INFO - Inside convert_kv(): key="idtarefa", val="1", type(val) is: "int"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,747 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:03:26,747 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,747 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:03:26,747 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:03:26,747 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,747 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,747 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:03:26,747 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val)="str"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,748 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:03:26,748 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,748 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,748 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:03:26,748 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.436102", type(val) is: "str"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,748 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:03:26,748 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,748 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,749 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:03:26,749 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:03:26,749 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,749 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.436102" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.436102"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:03:26,749 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,749 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:03:26,749 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,749 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,749 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:03:26,750 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,750 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:03:26,750 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,750 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:03:26,750 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:03:26,751 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,751 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:03:26,751 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,751 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,751 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:03:26,751 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:03:26,751 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,752 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:03:26,752 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:03:26,752 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:03:26,752 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,752 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:03:26,752 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:03:26,752 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:03:26,752 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:03:26,752 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:03:34,891 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:03:34,893 - DEBUG - Realizando a busca de todas as tarefas
2025-07-09 11:03:34,895 - INFO - 8 tarefas encontradas com sucesso
2025-07-09 11:03:34,896 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:03:42,930 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:03:42,932 - INFO - Realizando busca da tarefa 1
2025-07-09 11:03:42,933 - INFO - Tarefa 1 encontrada com sucesso
2025-07-09 11:03:42,934 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:04:39,399 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:04:39,406 - DEBUG - Atualizando tarefa 8 com novos dados: {'pontos': 1}
2025-07-09 11:04:39,419 - INFO - Tarefa 8 atualizada com sucesso
2025-07-09 11:04:39,420 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:05:43,612 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:05:43,613 - DEBUG - Dados para nova tarefa foram recebidos com sucesso: {'titulo': 'leitura', 'descricao': 'ler um livro sobre tecnologia', 'pontos': 1}
2025-07-09 11:05:43,657 - INFO - Tarefa 9 foi criada com sucesso
2025-07-09 11:05:43,657 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:06:00,572 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:06:00,574 - DEBUG - Deletando tarefa 9
2025-07-09 11:06:00,582 - INFO - Tarefa 9 foi marcada como deletada
2025-07-09 11:06:00,583 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:06:25,168 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:06:25,171 - INFO - Realizando busca da tarefa 9
2025-07-09 11:06:25,173 - WARNING - Tarefa 9 não foi encontrada
2025-07-09 11:06:25,174 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:06:33,563 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:06:33,566 - DEBUG - Realizando a busca de todas as tarefas
2025-07-09 11:06:33,567 - INFO - 8 tarefas encontradas com sucesso
2025-07-09 11:06:33,572 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:08:28,721 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:08:28,737 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True}
2025-07-09 11:08:28,758 - INFO - Histórico 1 foi criado com sucesso
2025-07-09 11:08:28,774 - DEBUG - Criando recompensa para hist: 1, usuário: 2
2025-07-09 11:08:28,775 - INFO - Iniciando extração da API - pontuação: 10
2025-07-09 11:08:28,795 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:08:28,930 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/10 HTTP/1.1" 200 2152
2025-07-09 11:08:28,933 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/10/
2025-07-09 11:08:28,938 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:08:29,017 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/10/ HTTP/1.1" 200 8346
2025-07-09 11:08:29,022 - INFO - Transform_API concluída para: caterpie
2025-07-09 11:08:29,033 - INFO - Recompensa criada para histórico 1
2025-07-09 11:08:29,034 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:10:27,233 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:10:27,234 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False}
2025-07-09 11:10:27,250 - INFO - Histórico 2 foi criado com sucesso
2025-07-09 11:10:27,251 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:12:15,756 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:12:15,757 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True}
2025-07-09 11:12:15,777 - INFO - Histórico 3 foi criado com sucesso
2025-07-09 11:12:15,778 - DEBUG - Criando recompensa para hist: 3, usuário: 3
2025-07-09 11:12:15,779 - INFO - Iniciando extração da API - pontuação: 1
2025-07-09 11:12:15,782 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:12:15,872 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/1 HTTP/1.1" 200 6957
2025-07-09 11:12:15,882 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/1/
2025-07-09 11:12:15,884 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:12:15,961 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/1/ HTTP/1.1" 200 5044
2025-07-09 11:12:15,964 - INFO - Transform_API concluída para: bulbasaur
2025-07-09 11:12:15,975 - INFO - Recompensa criada para histórico 3
2025-07-09 11:12:15,976 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:14:24,049 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:14:24,049 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True}
2025-07-09 11:14:24,066 - INFO - Histórico 4 foi criado com sucesso
2025-07-09 11:14:24,068 - DEBUG - Criando recompensa para hist: 4, usuário: 1
2025-07-09 11:14:24,068 - INFO - Iniciando extração da API - pontuação: 5
2025-07-09 11:14:24,071 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:14:24,184 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/5 HTTP/1.1" 200 6749
2025-07-09 11:14:24,191 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/5/
2025-07-09 11:14:24,192 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:14:24,274 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/5/ HTTP/1.1" 200 5769
2025-07-09 11:14:24,278 - INFO - Transform_API concluída para: charmeleon
2025-07-09 11:14:24,289 - INFO - Recompensa criada para histórico 4
2025-07-09 11:14:24,291 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:16:09,865 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:16:09,865 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False}
2025-07-09 11:16:09,881 - INFO - Histórico 5 foi criado com sucesso
2025-07-09 11:16:09,882 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:17:13,897 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:17:13,898 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True}
2025-07-09 11:17:13,912 - INFO - Histórico 6 foi criado com sucesso
2025-07-09 11:17:13,914 - DEBUG - Criando recompensa para hist: 6, usuário: 1
2025-07-09 11:17:13,914 - INFO - Iniciando extração da API - pontuação: 11
2025-07-09 11:17:13,915 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:17:13,992 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/11 HTTP/1.1" 200 2025
2025-07-09 11:17:13,995 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/11/
2025-07-09 11:17:13,997 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:17:14,087 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/11/ HTTP/1.1" 200 8494
2025-07-09 11:17:14,260 - INFO - Transform_API concluída para: metapod
2025-07-09 11:17:14,271 - INFO - Recompensa criada para histórico 6
2025-07-09 11:17:14,272 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:19:07,489 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:19:07,491 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True}
2025-07-09 11:19:07,506 - INFO - Histórico 7 foi criado com sucesso
2025-07-09 11:19:07,507 - DEBUG - Criando recompensa para hist: 7, usuário: 1
2025-07-09 11:19:07,507 - INFO - Iniciando extração da API - pontuação: 13
2025-07-09 11:19:07,508 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:19:07,589 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/13 HTTP/1.1" 200 2081
2025-07-09 11:19:07,592 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/13/
2025-07-09 11:19:07,594 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:19:07,665 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/13/ HTTP/1.1" 200 4569
2025-07-09 11:19:07,668 - INFO - Transform_API concluída para: weedle
2025-07-09 11:19:07,677 - INFO - Recompensa criada para histórico 7
2025-07-09 11:19:07,678 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:44:10,981 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:44:11,030 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True}
2025-07-09 11:44:11,103 - INFO - Histórico 8 foi criado com sucesso
2025-07-09 11:44:11,110 - DEBUG - Criando recompensa para hist: 8, usuário: 2
2025-07-09 11:44:11,110 - INFO - Iniciando extração da API - pontuação: 14
2025-07-09 11:44:11,118 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:44:16,053 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/14 HTTP/1.1" 200 1992
2025-07-09 11:44:16,058 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/14/
2025-07-09 11:44:16,060 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:44:16,188 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/14/ HTTP/1.1" 200 4542
2025-07-09 11:44:16,195 - INFO - Transform_API concluída para: kakuna
2025-07-09 11:44:16,207 - INFO - Recompensa criada para histórico 8
2025-07-09 11:44:16,209 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:46:55,656 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:46:55,657 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True}
2025-07-09 11:46:55,673 - INFO - Histórico 9 foi criado com sucesso
2025-07-09 11:46:55,675 - DEBUG - Criando recompensa para hist: 9, usuário: 2
2025-07-09 11:46:55,675 - INFO - Iniciando extração da API - pontuação: 15
2025-07-09 11:46:55,676 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:46:55,770 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/15 HTTP/1.1" 200 6025
2025-07-09 11:46:55,776 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/15/
2025-07-09 11:46:55,778 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:46:55,848 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/15/ HTTP/1.1" 200 4337
2025-07-09 11:46:55,852 - INFO - Transform_API concluída para: beedrill
2025-07-09 11:46:55,862 - INFO - Recompensa criada para histórico 9
2025-07-09 11:46:55,863 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:47:44,830 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:47:44,831 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True}
2025-07-09 11:47:44,843 - INFO - Histórico 10 foi criado com sucesso
2025-07-09 11:47:44,846 - DEBUG - Criando recompensa para hist: 10, usuário: 2
2025-07-09 11:47:44,846 - INFO - Iniciando extração da API - pontuação: 16
2025-07-09 11:47:44,847 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:47:44,930 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/16 HTTP/1.1" 200 5561
2025-07-09 11:47:44,935 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/16/
2025-07-09 11:47:44,939 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:47:45,026 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/16/ HTTP/1.1" 200 4521
2025-07-09 11:47:45,030 - INFO - Transform_API concluída para: pidgey
2025-07-09 11:47:45,039 - INFO - Recompensa criada para histórico 10
2025-07-09 11:47:45,041 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:49:50,513 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:49:50,513 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True}
2025-07-09 11:49:50,529 - INFO - Histórico 11 foi criado com sucesso
2025-07-09 11:49:50,530 - DEBUG - Criando recompensa para hist: 11, usuário: 3
2025-07-09 11:49:50,530 - INFO - Iniciando extração da API - pontuação: 5
2025-07-09 11:49:50,532 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:49:50,921 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/5 HTTP/1.1" 200 6749
2025-07-09 11:49:50,927 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/5/
2025-07-09 11:49:50,931 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:49:51,252 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/5/ HTTP/1.1" 200 5769
2025-07-09 11:49:51,267 - INFO - Transform_API concluída para: charmeleon
2025-07-09 11:49:51,279 - INFO - Recompensa criada para histórico 11
2025-07-09 11:49:51,281 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:50:57,868 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:50:57,869 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True}
2025-07-09 11:50:57,883 - INFO - Histórico 12 foi criado com sucesso
2025-07-09 11:50:57,885 - DEBUG - Criando recompensa para hist: 12, usuário: 3
2025-07-09 11:50:57,885 - INFO - Iniciando extração da API - pontuação: 11
2025-07-09 11:50:57,887 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:50:57,977 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/11 HTTP/1.1" 200 2025
2025-07-09 11:50:57,979 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/11/
2025-07-09 11:50:57,980 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:50:58,087 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/11/ HTTP/1.1" 200 8494
2025-07-09 11:50:58,092 - INFO - Transform_API concluída para: metapod
2025-07-09 11:50:58,103 - INFO - Recompensa criada para histórico 12
2025-07-09 11:50:58,105 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:52:04,672 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:52:04,673 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True}
2025-07-09 11:52:04,690 - INFO - Histórico 13 foi criado com sucesso
2025-07-09 11:52:04,692 - DEBUG - Criando recompensa para hist: 13, usuário: 4
2025-07-09 11:52:04,692 - INFO - Iniciando extração da API - pontuação: 10
2025-07-09 11:52:04,695 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:52:05,792 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/10 HTTP/1.1" 200 2152
2025-07-09 11:52:05,796 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/10/
2025-07-09 11:52:05,799 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:52:05,879 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/10/ HTTP/1.1" 200 8346
2025-07-09 11:52:05,883 - INFO - Transform_API concluída para: caterpie
2025-07-09 11:52:05,895 - INFO - Recompensa criada para histórico 13
2025-07-09 11:52:05,897 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:52:30,461 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:52:30,474 - DEBUG - Realizando a busca de todos os históricos
2025-07-09 11:52:30,496 - INFO - 13 históricos encontrados com sucesso
2025-07-09 11:52:30,496 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:52:37,780 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:52:37,781 - DEBUG - Realizando a busca de todos os históricos
2025-07-09 11:52:37,784 - INFO - 13 históricos encontrados com sucesso
2025-07-09 11:52:37,789 - INFO - Inside unicode_me(). val = "[{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:52:37,789 - INFO - Inside dicttoxml(): type(obj) is: "list", obj="[{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:52:37,790 - INFO - Inside unicode_me(). val = "[{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:52:37,790 - INFO - Inside convert(). obj type is: "list", obj="[{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}, {'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}]"
2025-07-09 11:52:37,790 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,792 - INFO - Inside convert_list()
2025-07-09 11:52:37,792 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,792 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,792 - INFO - Looping inside convert_list(): item="{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,793 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,793 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,794 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,794 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,794 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:37,794 - INFO - Looping inside convert_dict(): key="nome", val="Hackathon", type(val)="str"
2025-07-09 11:52:37,794 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,794 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,794 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,794 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,794 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,794 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,794 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,794 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,821 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,821 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:37,821 - INFO - Inside convert_kv(): key="nome", val="Hackathon", type(val) is: "str"
2025-07-09 11:52:37,821 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,821 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,821 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,821 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,821 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,821 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,821 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,822 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,822 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,822 - INFO - Inside escape_xml(). s = "Hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,822 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:37,822 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,822 - INFO - Inside unicode_me(). val = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina"
2025-07-09 11:52:37,822 - INFO - Looping inside convert_dict(): key="descricao", val="Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina", type(val)="str"
2025-07-09 11:52:37,822 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,822 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,822 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,822 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,822 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,823 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,823 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina"
2025-07-09 11:52:37,823 - INFO - Inside convert_kv(): key="descricao", val="Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina", type(val) is: "str"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,823 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,823 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,823 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,823 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,824 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,824 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,824 - INFO - Inside escape_xml(). s = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,824 - INFO - Inside unicode_me(). val = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina"
2025-07-09 11:52:37,824 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,824 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,824 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-09 11:52:37,824 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,824 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,824 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,824 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,824 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,826 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,826 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,826 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,826 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,826 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,827 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,827 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,827 - INFO - Looping inside convert_dict(): key="idtarefa", val="1", type(val)="int"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,827 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,827 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,827 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,827 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,827 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,828 - INFO - Inside convert_kv(): key="idtarefa", val="1", type(val) is: "int"
2025-07-09 11:52:37,828 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,828 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,828 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,828 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,828 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,828 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,828 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,828 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,828 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,828 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,828 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,828 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,828 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,829 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,829 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,829 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,829 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,829 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,829 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,829 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,830 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,830 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,830 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,830 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,830 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,830 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,830 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,830 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,830 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,830 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,830 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,831 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,831 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,831 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,831 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,831 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,831 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,831 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,831 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,831 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,831 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,831 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,831 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,831 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,831 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,831 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,832 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,832 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,832 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,832 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,832 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,833 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,833 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,833 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,833 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,833 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,833 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,833 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,833 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,834 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,834 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,834 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,834 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,834 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,834 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,835 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,835 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,835 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,835 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,835 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,835 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,835 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,836 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,836 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,836 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,836 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,836 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,836 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,836 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,836 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,836 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,836 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,836 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,836 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,837 - INFO - Looping inside convert_list(): item="{'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,837 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Leitura ', 'descricao': 'Iniciou a leitura do livro Introduction to Algorithms', 'idusuario': 1, 'idtarefa': 8, 'finalizada': False, 'idhist': 2, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,837 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "Leitura "
2025-07-09 11:52:37,837 - INFO - Looping inside convert_dict(): key="nome", val="Leitura ", type(val)="str"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,837 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,837 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,837 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,837 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,837 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "Leitura "
2025-07-09 11:52:37,838 - INFO - Inside convert_kv(): key="nome", val="Leitura ", type(val) is: "str"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,838 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,838 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,838 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,838 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,838 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,838 - INFO - Inside escape_xml(). s = "Leitura " and type(s) = "<class 'str'>"
2025-07-09 11:52:37,838 - INFO - Inside unicode_me(). val = "Leitura "
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "Iniciou a leitura do livro Introduction to Algorithms"
2025-07-09 11:52:37,839 - INFO - Looping inside convert_dict(): key="descricao", val="Iniciou a leitura do livro Introduction to Algorithms", type(val)="str"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,839 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,839 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,839 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,839 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "Iniciou a leitura do livro Introduction to Algorithms"
2025-07-09 11:52:37,839 - INFO - Inside convert_kv(): key="descricao", val="Iniciou a leitura do livro Introduction to Algorithms", type(val) is: "str"
2025-07-09 11:52:37,839 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,840 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,840 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,840 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,840 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,840 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,840 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,840 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,840 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,840 - INFO - Inside escape_xml(). s = "Iniciou a leitura do livro Introduction to Algorithms" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,840 - INFO - Inside unicode_me(). val = "Iniciou a leitura do livro Introduction to Algorithms"
2025-07-09 11:52:37,840 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,841 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,841 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,841 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,841 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,841 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,842 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,842 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,842 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,842 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,842 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,842 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,842 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,842 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,842 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,842 - INFO - Looping inside convert_dict(): key="idtarefa", val="8", type(val)="int"
2025-07-09 11:52:37,842 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,842 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,842 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,842 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,843 - INFO - Inside convert_kv(): key="idtarefa", val="8", type(val) is: "int"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,843 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,843 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,843 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,843 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,844 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,844 - INFO - Inside escape_xml(). s = "8" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,844 - INFO - Looping inside convert_dict(): key="finalizada", val="False", type(val)="bool"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,844 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,844 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,844 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,844 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,844 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,845 - INFO - Inside convert_bool(): key="finalizada", val="False", type(val) is: "bool"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,845 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,845 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,845 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,845 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,845 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,845 - INFO - Looping inside convert_dict(): key="idhist", val="2", type(val)="int"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,845 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,846 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,846 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,846 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,846 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,846 - INFO - Inside convert_kv(): key="idhist", val="2", type(val) is: "int"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,846 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,846 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,846 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,846 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,847 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,847 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,847 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,847 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,847 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,847 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,847 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,847 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,847 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,848 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,848 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,848 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,848 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,848 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,848 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,848 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,848 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,849 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,849 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,849 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,849 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,849 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,849 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,849 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,850 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,850 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,850 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,850 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,850 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,850 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,850 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,850 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,851 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,851 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,851 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,851 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,851 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,851 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,851 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,851 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,852 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,852 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,852 - INFO - Looping inside convert_list(): item="{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,852 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True, 'idhist': 3, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,852 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,852 - INFO - Looping inside convert_dict(): key="nome", val="Leitura", type(val)="str"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,852 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,852 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,853 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,853 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,853 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,853 - INFO - Inside convert_kv(): key="nome", val="Leitura", type(val) is: "str"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,853 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,853 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,853 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,854 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,854 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,854 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,854 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,854 - INFO - Inside escape_xml(). s = "Leitura" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,854 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,854 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,854 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Deep Learning"
2025-07-09 11:52:37,854 - INFO - Looping inside convert_dict(): key="descricao", val="Finalizou a leitura do livro Deep Learning", type(val)="str"
2025-07-09 11:52:37,854 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,854 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,854 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,855 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,855 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,855 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Deep Learning"
2025-07-09 11:52:37,855 - INFO - Inside convert_kv(): key="descricao", val="Finalizou a leitura do livro Deep Learning", type(val) is: "str"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,855 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,855 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,855 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,855 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,855 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,856 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,856 - INFO - Inside escape_xml(). s = "Finalizou a leitura do livro Deep Learning" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Deep Learning"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,856 - INFO - Looping inside convert_dict(): key="idusuario", val="3", type(val)="int"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,856 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,856 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,856 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,856 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,856 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,857 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,857 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,857 - INFO - Inside convert_kv(): key="idusuario", val="3", type(val) is: "int"
2025-07-09 11:52:37,857 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,857 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,857 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,857 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,857 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,857 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,857 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,857 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,857 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,857 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,858 - INFO - Looping inside convert_dict(): key="idtarefa", val="8", type(val)="int"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,858 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,858 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,858 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,858 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,858 - INFO - Inside convert_kv(): key="idtarefa", val="8", type(val) is: "int"
2025-07-09 11:52:37,858 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,859 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,859 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,859 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,859 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,859 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,859 - INFO - Inside escape_xml(). s = "8" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,859 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,859 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,859 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,860 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,860 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,860 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,860 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,860 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,860 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,860 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,860 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,861 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,861 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,861 - INFO - Looping inside convert_dict(): key="idhist", val="3", type(val)="int"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,861 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,861 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,861 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,861 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,861 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,862 - INFO - Inside convert_kv(): key="idhist", val="3", type(val) is: "int"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,862 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,862 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,862 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,862 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,862 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,862 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,862 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,862 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,863 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,863 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,863 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,863 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,863 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,863 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,863 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,863 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,864 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,864 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,864 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,864 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,864 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,864 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,864 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,864 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,865 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,865 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,865 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,865 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,865 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,865 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,865 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,866 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,866 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,866 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,866 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,866 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,866 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,866 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,866 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,867 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,867 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,867 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,867 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,867 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,867 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,867 - INFO - Inside unicode_me(). val = "{'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,867 - INFO - Looping inside convert_list(): item="{'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "{'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,868 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Olimpiadas', 'descricao': 'Concluiu a primeira Fase das olimpiadas da matemática', 'idusuario': 1, 'idtarefa': 2, 'finalizada': True, 'idhist': 4, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,868 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "Olimpiadas"
2025-07-09 11:52:37,868 - INFO - Looping inside convert_dict(): key="nome", val="Olimpiadas", type(val)="str"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,868 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,868 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,868 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,868 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,868 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,869 - INFO - Inside unicode_me(). val = "Olimpiadas"
2025-07-09 11:52:37,869 - INFO - Inside convert_kv(): key="nome", val="Olimpiadas", type(val) is: "str"
2025-07-09 11:52:37,869 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,869 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,869 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,869 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,869 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,869 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,869 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,869 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,869 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,869 - INFO - Inside escape_xml(). s = "Olimpiadas" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,869 - INFO - Inside unicode_me(). val = "Olimpiadas"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "Concluiu a primeira Fase das olimpiadas da matemática"
2025-07-09 11:52:37,870 - INFO - Looping inside convert_dict(): key="descricao", val="Concluiu a primeira Fase das olimpiadas da matemática", type(val)="str"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,870 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,870 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,870 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,870 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,870 - INFO - Inside unicode_me(). val = "Concluiu a primeira Fase das olimpiadas da matemática"
2025-07-09 11:52:37,871 - INFO - Inside convert_kv(): key="descricao", val="Concluiu a primeira Fase das olimpiadas da matemática", type(val) is: "str"
2025-07-09 11:52:37,871 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,871 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,871 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,871 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,871 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,871 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,871 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,871 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,871 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,871 - INFO - Inside escape_xml(). s = "Concluiu a primeira Fase das olimpiadas da matemática" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,871 - INFO - Inside unicode_me(). val = "Concluiu a primeira Fase das olimpiadas da matemática"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,872 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,872 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,872 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,872 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,872 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,872 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,872 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,873 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,873 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,873 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,873 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,873 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,873 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,873 - INFO - Looping inside convert_dict(): key="idtarefa", val="2", type(val)="int"
2025-07-09 11:52:37,873 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,874 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,874 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,874 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,874 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,874 - INFO - Inside convert_kv(): key="idtarefa", val="2", type(val) is: "int"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,874 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,874 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,874 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,875 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,875 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,875 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,875 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,875 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,875 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,875 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,875 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,875 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,876 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,876 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,876 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,876 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,876 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:37,877 - INFO - Looping inside convert_dict(): key="idhist", val="4", type(val)="int"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,877 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,877 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,877 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,877 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:37,877 - INFO - Inside convert_kv(): key="idhist", val="4", type(val) is: "int"
2025-07-09 11:52:37,877 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,878 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,878 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,878 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,878 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,878 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,878 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,878 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,878 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,878 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,879 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,879 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,879 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,879 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,879 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,879 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,879 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,879 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,880 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,880 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,880 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,880 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,880 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,880 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,880 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,880 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,880 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,881 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,881 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,881 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,881 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,881 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,881 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,881 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,882 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,882 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,882 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,882 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,882 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,882 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,882 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,883 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,883 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,883 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,883 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,883 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "{'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,883 - INFO - Looping inside convert_list(): item="{'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "{'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,883 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Olimpiadas', 'descricao': 'Está na segunda fase das olimpiadas de matemática', 'idusuario': 1, 'idtarefa': 3, 'finalizada': False, 'idhist': 5, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,883 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,883 - INFO - Inside unicode_me(). val = "Olimpiadas"
2025-07-09 11:52:37,884 - INFO - Looping inside convert_dict(): key="nome", val="Olimpiadas", type(val)="str"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,884 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,884 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,884 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,884 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "Olimpiadas"
2025-07-09 11:52:37,884 - INFO - Inside convert_kv(): key="nome", val="Olimpiadas", type(val) is: "str"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,884 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,884 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,885 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,885 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,885 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,885 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,885 - INFO - Inside escape_xml(). s = "Olimpiadas" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "Olimpiadas"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "Está na segunda fase das olimpiadas de matemática"
2025-07-09 11:52:37,885 - INFO - Looping inside convert_dict(): key="descricao", val="Está na segunda fase das olimpiadas de matemática", type(val)="str"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,885 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,885 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,885 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,886 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,886 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "Está na segunda fase das olimpiadas de matemática"
2025-07-09 11:52:37,886 - INFO - Inside convert_kv(): key="descricao", val="Está na segunda fase das olimpiadas de matemática", type(val) is: "str"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,886 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,886 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,886 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,886 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,887 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,887 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,887 - INFO - Inside escape_xml(). s = "Está na segunda fase das olimpiadas de matemática" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "Está na segunda fase das olimpiadas de matemática"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,887 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,887 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,887 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,887 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,888 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,888 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,888 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,888 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,888 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,889 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,889 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,889 - INFO - Looping inside convert_dict(): key="idtarefa", val="3", type(val)="int"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,889 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,889 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,889 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,889 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,889 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,890 - INFO - Inside convert_kv(): key="idtarefa", val="3", type(val) is: "int"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,890 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,890 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,890 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,890 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,890 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,890 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,890 - INFO - Looping inside convert_dict(): key="finalizada", val="False", type(val)="bool"
2025-07-09 11:52:37,890 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,891 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,891 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,891 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,891 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,891 - INFO - Inside convert_bool(): key="finalizada", val="False", type(val) is: "bool"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,891 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,891 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,891 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,892 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,892 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,892 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:52:37,892 - INFO - Looping inside convert_dict(): key="idhist", val="5", type(val)="int"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,892 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,892 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,892 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,892 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,892 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,893 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,893 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:52:37,893 - INFO - Inside convert_kv(): key="idhist", val="5", type(val) is: "int"
2025-07-09 11:52:37,893 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,893 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,893 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,893 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,893 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,893 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,894 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,894 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,894 - INFO - Inside escape_xml(). s = "5" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,894 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,894 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,894 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,894 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,894 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,894 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,895 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,895 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,895 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,895 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,895 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,895 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,895 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,895 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,896 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,896 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,896 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,896 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,896 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,896 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,896 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,897 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,897 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,897 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,897 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,897 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,897 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,897 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,897 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,897 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,898 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,898 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,898 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,898 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,898 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,898 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,898 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,899 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,899 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,899 - INFO - Inside unicode_me(). val = "{'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,899 - INFO - Looping inside convert_list(): item="{'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,899 - INFO - Inside unicode_me(). val = "{'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,899 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'API', 'descricao': 'Criou uma API utilizando python sobre gerenciamento de tarefas', 'idusuario': 1, 'idtarefa': 4, 'finalizada': True, 'idhist': 6, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,899 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,899 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,899 - INFO - Inside unicode_me(). val = "API"
2025-07-09 11:52:37,899 - INFO - Looping inside convert_dict(): key="nome", val="API", type(val)="str"
2025-07-09 11:52:37,899 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,899 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,899 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,899 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,900 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,900 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "API"
2025-07-09 11:52:37,900 - INFO - Inside convert_kv(): key="nome", val="API", type(val) is: "str"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,900 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,900 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,900 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,900 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,900 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,901 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,901 - INFO - Inside escape_xml(). s = "API" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "API"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "Criou uma API utilizando python sobre gerenciamento de tarefas"
2025-07-09 11:52:37,901 - INFO - Looping inside convert_dict(): key="descricao", val="Criou uma API utilizando python sobre gerenciamento de tarefas", type(val)="str"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,901 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,901 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,901 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,901 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,901 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "Criou uma API utilizando python sobre gerenciamento de tarefas"
2025-07-09 11:52:37,902 - INFO - Inside convert_kv(): key="descricao", val="Criou uma API utilizando python sobre gerenciamento de tarefas", type(val) is: "str"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,902 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,902 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,902 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,902 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,902 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,902 - INFO - Inside escape_xml(). s = "Criou uma API utilizando python sobre gerenciamento de tarefas" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "Criou uma API utilizando python sobre gerenciamento de tarefas"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,902 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,903 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,903 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,903 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,903 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,903 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,903 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,903 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,904 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,904 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,904 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,904 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,904 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,904 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,904 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,904 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,904 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,904 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:37,904 - INFO - Looping inside convert_dict(): key="idtarefa", val="4", type(val)="int"
2025-07-09 11:52:37,904 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,904 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,904 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,905 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,905 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,905 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:37,905 - INFO - Inside convert_kv(): key="idtarefa", val="4", type(val) is: "int"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,905 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,905 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,905 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,905 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,906 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,906 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,906 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,906 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,906 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,906 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,906 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,906 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,906 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,906 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,906 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,906 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,907 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,907 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,907 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,907 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,907 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,908 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:52:37,908 - INFO - Looping inside convert_dict(): key="idhist", val="6", type(val)="int"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,908 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,908 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,908 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,908 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,908 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:52:37,909 - INFO - Inside convert_kv(): key="idhist", val="6", type(val) is: "int"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,909 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,909 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,909 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,909 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,909 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,909 - INFO - Inside escape_xml(). s = "6" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,909 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,909 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,910 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,910 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,910 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,910 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,910 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,910 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,910 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,910 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,911 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,911 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,911 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,911 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,911 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,911 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,911 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,911 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,912 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,912 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,912 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,912 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,912 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,912 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,912 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,913 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,913 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,913 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,913 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,913 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,913 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,913 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,913 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,914 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,914 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,914 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,914 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,914 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,914 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,914 - INFO - Inside unicode_me(). val = "{'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,914 - INFO - Looping inside convert_list(): item="{'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "{'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,915 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'AirFlow', 'descricao': 'Concluiu um cusro básico de airflow na Alura', 'idusuario': 1, 'idtarefa': 5, 'finalizada': True, 'idhist': 7, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,915 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "AirFlow"
2025-07-09 11:52:37,915 - INFO - Looping inside convert_dict(): key="nome", val="AirFlow", type(val)="str"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,915 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,915 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,915 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,915 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,915 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "AirFlow"
2025-07-09 11:52:37,916 - INFO - Inside convert_kv(): key="nome", val="AirFlow", type(val) is: "str"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,916 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,916 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,916 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,916 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,916 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,916 - INFO - Inside escape_xml(). s = "AirFlow" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "AirFlow"
2025-07-09 11:52:37,916 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "Concluiu um cusro básico de airflow na Alura"
2025-07-09 11:52:37,917 - INFO - Looping inside convert_dict(): key="descricao", val="Concluiu um cusro básico de airflow na Alura", type(val)="str"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,917 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,917 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,917 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,917 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "Concluiu um cusro básico de airflow na Alura"
2025-07-09 11:52:37,917 - INFO - Inside convert_kv(): key="descricao", val="Concluiu um cusro básico de airflow na Alura", type(val) is: "str"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,917 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,918 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,918 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,918 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,918 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,918 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,918 - INFO - Inside escape_xml(). s = "Concluiu um cusro básico de airflow na Alura" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "Concluiu um cusro básico de airflow na Alura"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,918 - INFO - Looping inside convert_dict(): key="idusuario", val="1", type(val)="int"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,918 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,919 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,919 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,919 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,919 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:37,919 - INFO - Inside convert_kv(): key="idusuario", val="1", type(val) is: "int"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,919 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,919 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,919 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,920 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,920 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,920 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,920 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,920 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,920 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,920 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:52:37,920 - INFO - Looping inside convert_dict(): key="idtarefa", val="5", type(val)="int"
2025-07-09 11:52:37,920 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,920 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,920 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,920 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,920 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "5"
2025-07-09 11:52:37,921 - INFO - Inside convert_kv(): key="idtarefa", val="5", type(val) is: "int"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,921 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,921 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,921 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,921 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,922 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,922 - INFO - Inside escape_xml(). s = "5" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,922 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,922 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,922 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,922 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,922 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,922 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,923 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,923 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,923 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,923 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,923 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,923 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:52:37,923 - INFO - Looping inside convert_dict(): key="idhist", val="7", type(val)="int"
2025-07-09 11:52:37,923 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,924 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,924 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,924 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,924 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:52:37,924 - INFO - Inside convert_kv(): key="idhist", val="7", type(val) is: "int"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,924 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,924 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,924 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,925 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,925 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,925 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,925 - INFO - Inside escape_xml(). s = "7" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,925 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,925 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,925 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,925 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,925 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,926 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,926 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,926 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,926 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,926 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,927 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,927 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,927 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,927 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,927 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,927 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,927 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,928 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,928 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,928 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,928 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,928 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,928 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,928 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,928 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,929 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,929 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,929 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,929 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,929 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,929 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,929 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,929 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,930 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,930 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,930 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,930 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,930 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,930 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,930 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "{'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,931 - INFO - Looping inside convert_list(): item="{'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "{'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,931 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL da hastag ', 'idusuario': 2, 'idtarefa': 7, 'finalizada': True, 'idhist': 8, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,931 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "ETL"
2025-07-09 11:52:37,931 - INFO - Looping inside convert_dict(): key="nome", val="ETL", type(val)="str"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,931 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,931 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,931 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,931 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,932 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,932 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,932 - INFO - Inside unicode_me(). val = "ETL"
2025-07-09 11:52:37,932 - INFO - Inside convert_kv(): key="nome", val="ETL", type(val) is: "str"
2025-07-09 11:52:37,932 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,932 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,932 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,932 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,932 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,932 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,932 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,932 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,932 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,933 - INFO - Inside escape_xml(). s = "ETL" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "ETL"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "Participou de um intensivo de ETL da hastag "
2025-07-09 11:52:37,933 - INFO - Looping inside convert_dict(): key="descricao", val="Participou de um intensivo de ETL da hastag ", type(val)="str"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,933 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,933 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,933 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,933 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,933 - INFO - Inside unicode_me(). val = "Participou de um intensivo de ETL da hastag "
2025-07-09 11:52:37,934 - INFO - Inside convert_kv(): key="descricao", val="Participou de um intensivo de ETL da hastag ", type(val) is: "str"
2025-07-09 11:52:37,934 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,934 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,934 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,934 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,934 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,934 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,934 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,934 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,934 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,934 - INFO - Inside escape_xml(). s = "Participou de um intensivo de ETL da hastag " and type(s) = "<class 'str'>"
2025-07-09 11:52:37,934 - INFO - Inside unicode_me(). val = "Participou de um intensivo de ETL da hastag "
2025-07-09 11:52:37,934 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,935 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,935 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,935 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,935 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,935 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,936 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,936 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,936 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,936 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,936 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,936 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,936 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,936 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,936 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,936 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:52:37,936 - INFO - Looping inside convert_dict(): key="idtarefa", val="7", type(val)="int"
2025-07-09 11:52:37,936 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,936 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,937 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,937 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,937 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,937 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "7"
2025-07-09 11:52:37,937 - INFO - Inside convert_kv(): key="idtarefa", val="7", type(val) is: "int"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,937 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,937 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,937 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,937 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,938 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,938 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,938 - INFO - Inside escape_xml(). s = "7" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,938 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,938 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,938 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,938 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,938 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,938 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,939 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,939 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,939 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,939 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,939 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,939 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,939 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,940 - INFO - Looping inside convert_dict(): key="idhist", val="8", type(val)="int"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,940 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,940 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,940 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,940 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,940 - INFO - Inside convert_kv(): key="idhist", val="8", type(val) is: "int"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,940 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,941 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,941 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,941 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,941 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,941 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,941 - INFO - Inside escape_xml(). s = "8" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,941 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val)="str"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,941 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,941 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,941 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,942 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val) is: "str"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,942 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,942 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,942 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,942 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,943 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,943 - INFO - Inside escape_xml(). s = "2025-07-09T14:27:06.668004" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,943 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,943 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,943 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,943 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,943 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,943 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,944 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,944 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,944 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,944 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,944 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,944 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,944 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,944 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,945 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,945 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,945 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,945 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,945 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,945 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,945 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,945 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,946 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,946 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,946 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,946 - INFO - Looping inside convert_list(): item="{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,946 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Refactoring', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 9, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,946 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,946 - INFO - Looping inside convert_dict(): key="nome", val="Leitura", type(val)="str"
2025-07-09 11:52:37,946 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,947 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,947 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,947 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,947 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,947 - INFO - Inside convert_kv(): key="nome", val="Leitura", type(val) is: "str"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,947 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,947 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,947 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,947 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,948 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,948 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,948 - INFO - Inside escape_xml(). s = "Leitura" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Refactoring"
2025-07-09 11:52:37,948 - INFO - Looping inside convert_dict(): key="descricao", val="Finalizou a leitura do livro Refactoring", type(val)="str"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,948 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,948 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,948 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,948 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,949 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,949 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,949 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Refactoring"
2025-07-09 11:52:37,949 - INFO - Inside convert_kv(): key="descricao", val="Finalizou a leitura do livro Refactoring", type(val) is: "str"
2025-07-09 11:52:37,949 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,949 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,949 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,949 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,949 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,949 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,949 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,949 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,949 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,949 - INFO - Inside escape_xml(). s = "Finalizou a leitura do livro Refactoring" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Refactoring"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,950 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,950 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,950 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,950 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,950 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,950 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,950 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,951 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,951 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,951 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,951 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,951 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,951 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,951 - INFO - Looping inside convert_dict(): key="idtarefa", val="8", type(val)="int"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,951 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,952 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,952 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,952 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,952 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,952 - INFO - Inside convert_kv(): key="idtarefa", val="8", type(val) is: "int"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,952 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,952 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,952 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,953 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,953 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,953 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,953 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,953 - INFO - Inside escape_xml(). s = "8" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,953 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,953 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,953 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,953 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,953 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,953 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,953 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,953 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,953 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,954 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,954 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,954 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,954 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,954 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "9"
2025-07-09 11:52:37,955 - INFO - Looping inside convert_dict(): key="idhist", val="9", type(val)="int"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,955 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,955 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,955 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,955 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,955 - INFO - Inside unicode_me(). val = "9"
2025-07-09 11:52:37,955 - INFO - Inside convert_kv(): key="idhist", val="9", type(val) is: "int"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,956 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,956 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,956 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,956 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,956 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,956 - INFO - Inside escape_xml(). s = "9" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,956 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val)="str"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,956 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,957 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,957 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,957 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,957 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,957 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val) is: "str"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,957 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,957 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,957 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,957 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,958 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,958 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,958 - INFO - Inside escape_xml(). s = "2025-07-09T14:27:06.668004" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,958 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,958 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,958 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,958 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,958 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,958 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,958 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,958 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,958 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,958 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,959 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,959 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,959 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,959 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,959 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,959 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,959 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,960 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,960 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,960 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,960 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,960 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,960 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,960 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,961 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,961 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,961 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,961 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,961 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,961 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,961 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,961 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,961 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,961 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,961 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,961 - INFO - Looping inside convert_list(): item="{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,961 - INFO - Inside unicode_me(). val = "{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,961 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Leitura', 'descricao': 'Finalizou a leitura do livro Deep Learning', 'idusuario': 2, 'idtarefa': 8, 'finalizada': True, 'idhist': 10, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,961 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,962 - INFO - Looping inside convert_dict(): key="nome", val="Leitura", type(val)="str"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,962 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,962 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,962 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,962 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,962 - INFO - Inside convert_kv(): key="nome", val="Leitura", type(val) is: "str"
2025-07-09 11:52:37,962 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,963 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,963 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,963 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,963 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,963 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,963 - INFO - Inside escape_xml(). s = "Leitura" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "Leitura"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Deep Learning"
2025-07-09 11:52:37,963 - INFO - Looping inside convert_dict(): key="descricao", val="Finalizou a leitura do livro Deep Learning", type(val)="str"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,963 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,964 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,964 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,964 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,964 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Deep Learning"
2025-07-09 11:52:37,964 - INFO - Inside convert_kv(): key="descricao", val="Finalizou a leitura do livro Deep Learning", type(val) is: "str"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,964 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,964 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,964 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,964 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,965 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,965 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,965 - INFO - Inside escape_xml(). s = "Finalizou a leitura do livro Deep Learning" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "Finalizou a leitura do livro Deep Learning"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,965 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,965 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,965 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,965 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,965 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:37,966 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,966 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,966 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,966 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,966 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,966 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,967 - INFO - Looping inside convert_dict(): key="idtarefa", val="8", type(val)="int"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,967 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,967 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,967 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,967 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "8"
2025-07-09 11:52:37,967 - INFO - Inside convert_kv(): key="idtarefa", val="8", type(val) is: "int"
2025-07-09 11:52:37,967 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,968 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,968 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,968 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,968 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,968 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,968 - INFO - Inside escape_xml(). s = "8" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,968 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,968 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,968 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,969 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,969 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,969 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,969 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,969 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,969 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,969 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,970 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,970 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,970 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "10"
2025-07-09 11:52:37,970 - INFO - Looping inside convert_dict(): key="idhist", val="10", type(val)="int"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,970 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,970 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,970 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,970 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,971 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,971 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,971 - INFO - Inside unicode_me(). val = "10"
2025-07-09 11:52:37,971 - INFO - Inside convert_kv(): key="idhist", val="10", type(val) is: "int"
2025-07-09 11:52:37,971 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,971 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,971 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,971 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,971 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,971 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,971 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,971 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:37,971 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,971 - INFO - Inside escape_xml(). s = "10" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,972 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val)="str"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,972 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,972 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,972 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,972 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,972 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val) is: "str"
2025-07-09 11:52:37,972 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,973 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:37,973 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,973 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:37,973 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:37,973 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,973 - INFO - Inside escape_xml(). s = "2025-07-09T14:27:06.668004" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,973 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,973 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,974 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,974 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,974 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,974 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,974 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,974 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:37,974 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,974 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,975 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:37,975 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:37,975 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,975 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,975 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,975 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,975 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,975 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,975 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:37,976 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,976 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:37,976 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,976 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:37,976 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:37,976 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,976 - INFO - Inside unicode_me(). val = "{'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,977 - INFO - Looping inside convert_list(): item="{'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "{'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,977 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'AirFlow', 'descricao': 'Concluiu um curso avançado de airflow na Alura', 'idusuario': 3, 'idtarefa': 6, 'finalizada': True, 'idhist': 11, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:37,977 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "AirFlow"
2025-07-09 11:52:37,977 - INFO - Looping inside convert_dict(): key="nome", val="AirFlow", type(val)="str"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,977 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,977 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,977 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,977 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,977 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "AirFlow"
2025-07-09 11:52:37,978 - INFO - Inside convert_kv(): key="nome", val="AirFlow", type(val) is: "str"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,978 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:37,978 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,978 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:37,978 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:37,978 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,978 - INFO - Inside escape_xml(). s = "AirFlow" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "AirFlow"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,978 - INFO - Inside unicode_me(). val = "Concluiu um curso avançado de airflow na Alura"
2025-07-09 11:52:37,979 - INFO - Looping inside convert_dict(): key="descricao", val="Concluiu um curso avançado de airflow na Alura", type(val)="str"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,979 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,979 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,979 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,979 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "Concluiu um curso avançado de airflow na Alura"
2025-07-09 11:52:37,979 - INFO - Inside convert_kv(): key="descricao", val="Concluiu um curso avançado de airflow na Alura", type(val) is: "str"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,979 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,979 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:37,980 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,980 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:37,980 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:37,980 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,980 - INFO - Inside escape_xml(). s = "Concluiu um curso avançado de airflow na Alura" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "Concluiu um curso avançado de airflow na Alura"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,980 - INFO - Looping inside convert_dict(): key="idusuario", val="3", type(val)="int"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,980 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,980 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,980 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,981 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,981 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:37,981 - INFO - Inside convert_kv(): key="idusuario", val="3", type(val) is: "int"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,981 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:37,981 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,981 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,981 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:37,982 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:37,982 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,982 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:52:37,982 - INFO - Looping inside convert_dict(): key="idtarefa", val="6", type(val)="int"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,982 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,982 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,982 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,982 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,982 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "6"
2025-07-09 11:52:37,983 - INFO - Inside convert_kv(): key="idtarefa", val="6", type(val) is: "int"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,983 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:37,983 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,983 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:37,983 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:37,983 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,983 - INFO - Inside escape_xml(). s = "6" and type(s) = "<class 'int'>"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,983 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,984 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,984 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,984 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,984 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,984 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:37,984 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,984 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,984 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:37,984 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,985 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:37,985 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:37,985 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "11"
2025-07-09 11:52:37,985 - INFO - Looping inside convert_dict(): key="idhist", val="11", type(val)="int"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:37,985 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:37,985 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,985 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:37,985 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:37,986 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:38,110 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,110 - INFO - Inside unicode_me(). val = "11"
2025-07-09 11:52:38,110 - INFO - Inside convert_kv(): key="idhist", val="11", type(val) is: "int"
2025-07-09 11:52:38,110 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,110 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,110 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:38,111 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,111 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,111 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,111 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,111 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:38,111 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,111 - INFO - Inside escape_xml(). s = "11" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,111 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,111 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,111 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val)="str"
2025-07-09 11:52:38,111 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,111 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,111 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:38,112 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,112 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,112 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,112 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val) is: "str"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,112 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:38,112 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,112 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,112 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,113 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:38,113 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,113 - INFO - Inside escape_xml(). s = "2025-07-09T14:27:06.668004" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,113 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,113 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:38,113 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,113 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,113 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:38,114 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,114 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:38,114 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,114 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:38,114 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,115 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,115 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:38,115 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,115 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,115 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,115 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:38,116 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:38,116 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,116 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,116 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:38,116 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,116 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,116 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,116 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,116 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:38,116 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,116 - INFO - Inside unicode_me(). val = "{'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:38,116 - INFO - Looping inside convert_list(): item="{'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:38,116 - INFO - Inside unicode_me(). val = "{'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:38,116 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'API', 'descricao': 'Criou uma API em python para filmes', 'idusuario': 3, 'idtarefa': 4, 'finalizada': True, 'idhist': 12, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:38,117 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "API"
2025-07-09 11:52:38,117 - INFO - Looping inside convert_dict(): key="nome", val="API", type(val)="str"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,117 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:38,117 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,117 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,117 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,117 - INFO - Inside unicode_me(). val = "API"
2025-07-09 11:52:38,117 - INFO - Inside convert_kv(): key="nome", val="API", type(val) is: "str"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,118 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:38,118 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,118 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,118 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:38,118 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,118 - INFO - Inside escape_xml(). s = "API" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "API"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "Criou uma API em python para filmes"
2025-07-09 11:52:38,118 - INFO - Looping inside convert_dict(): key="descricao", val="Criou uma API em python para filmes", type(val)="str"
2025-07-09 11:52:38,118 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,119 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:38,119 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,119 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,119 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "Criou uma API em python para filmes"
2025-07-09 11:52:38,119 - INFO - Inside convert_kv(): key="descricao", val="Criou uma API em python para filmes", type(val) is: "str"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,119 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,119 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:38,119 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,120 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,120 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:38,120 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,120 - INFO - Inside escape_xml(). s = "Criou uma API em python para filmes" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "Criou uma API em python para filmes"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:38,120 - INFO - Looping inside convert_dict(): key="idusuario", val="3", type(val)="int"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,120 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,120 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:38,120 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "3"
2025-07-09 11:52:38,121 - INFO - Inside convert_kv(): key="idusuario", val="3", type(val) is: "int"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,121 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:38,121 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,121 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,121 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:38,122 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,122 - INFO - Inside escape_xml(). s = "3" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,122 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,122 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:38,122 - INFO - Looping inside convert_dict(): key="idtarefa", val="4", type(val)="int"
2025-07-09 11:52:38,122 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,122 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,122 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:38,122 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,122 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,122 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,122 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,122 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:38,123 - INFO - Inside convert_kv(): key="idtarefa", val="4", type(val) is: "int"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,123 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:38,123 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,123 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,123 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:38,123 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,123 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,123 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:38,124 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,124 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:38,124 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,124 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,124 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:38,124 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,124 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,124 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:38,125 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,125 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,125 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:38,125 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "12"
2025-07-09 11:52:38,125 - INFO - Looping inside convert_dict(): key="idhist", val="12", type(val)="int"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,125 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:38,125 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,125 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,125 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,126 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:38,126 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,126 - INFO - Inside unicode_me(). val = "12"
2025-07-09 11:52:38,126 - INFO - Inside convert_kv(): key="idhist", val="12", type(val) is: "int"
2025-07-09 11:52:38,126 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,126 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,126 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:38,126 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,126 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,126 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,126 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,126 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:38,126 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,126 - INFO - Inside escape_xml(). s = "12" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,127 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val)="str"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,127 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:38,127 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,127 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,127 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,127 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val) is: "str"
2025-07-09 11:52:38,127 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,128 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:38,128 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,128 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,128 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:38,128 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,128 - INFO - Inside escape_xml(). s = "2025-07-09T14:27:06.668004" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,128 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,128 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:38,128 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,128 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,128 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,128 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:38,130 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,130 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:38,130 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,130 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,130 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:38,130 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,130 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:38,130 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,131 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:38,131 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,131 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,131 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:38,131 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,131 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,131 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:38,131 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,132 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,132 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:38,132 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:38,132 - INFO - Looping inside convert_list(): item="{'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}", item_name="item", type="dict"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:38,132 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Hackathon', 'descricao': 'Participou de um evento de hackathon em Osvaldo Cruz', 'idusuario': 4, 'idtarefa': 1, 'finalizada': True, 'idhist': 13, 'dt_inclusao': '2025-07-09T14:27:06.668004', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:38,132 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:38,132 - INFO - Looping inside convert_dict(): key="nome", val="Hackathon", type(val)="str"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,132 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,133 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:38,133 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,133 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,133 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:38,133 - INFO - Inside convert_kv(): key="nome", val="Hackathon", type(val) is: "str"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,133 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:38,133 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,133 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,133 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:38,134 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:38,134 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,134 - INFO - Inside escape_xml(). s = "Hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,134 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:38,134 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,134 - INFO - Inside unicode_me(). val = "Participou de um evento de hackathon em Osvaldo Cruz"
2025-07-09 11:52:38,134 - INFO - Looping inside convert_dict(): key="descricao", val="Participou de um evento de hackathon em Osvaldo Cruz", type(val)="str"
2025-07-09 11:52:38,134 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,134 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,134 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:38,134 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,134 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,134 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,135 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "Participou de um evento de hackathon em Osvaldo Cruz"
2025-07-09 11:52:38,135 - INFO - Inside convert_kv(): key="descricao", val="Participou de um evento de hackathon em Osvaldo Cruz", type(val) is: "str"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,135 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:38,135 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,135 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,135 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:38,135 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:38,135 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,136 - INFO - Inside escape_xml(). s = "Participou de um evento de hackathon em Osvaldo Cruz" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "Participou de um evento de hackathon em Osvaldo Cruz"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:38,136 - INFO - Looping inside convert_dict(): key="idusuario", val="4", type(val)="int"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,136 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:38,136 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,136 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,136 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,136 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:38,137 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,137 - INFO - Inside unicode_me(). val = "4"
2025-07-09 11:52:38,137 - INFO - Inside convert_kv(): key="idusuario", val="4", type(val) is: "int"
2025-07-09 11:52:38,137 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,137 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,137 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:38,137 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,137 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,137 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,137 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:38,137 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:38,137 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,137 - INFO - Inside escape_xml(). s = "4" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,138 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,138 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:38,138 - INFO - Looping inside convert_dict(): key="idtarefa", val="1", type(val)="int"
2025-07-09 11:52:38,138 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,138 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,138 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:38,138 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,138 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,138 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,138 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,138 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:38,139 - INFO - Inside convert_kv(): key="idtarefa", val="1", type(val) is: "int"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,139 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:38,139 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,139 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:38,139 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:38,139 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,139 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,139 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:38,140 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,140 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:38,140 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,140 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,140 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:38,140 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:38,140 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,141 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:38,141 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,141 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:38,141 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:38,141 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "13"
2025-07-09 11:52:38,141 - INFO - Looping inside convert_dict(): key="idhist", val="13", type(val)="int"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,141 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,141 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:38,142 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,142 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,142 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "13"
2025-07-09 11:52:38,142 - INFO - Inside convert_kv(): key="idhist", val="13", type(val) is: "int"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,142 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:38,142 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,142 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,142 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:38,143 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:38,143 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,143 - INFO - Inside escape_xml(). s = "13" and type(s) = "<class 'int'>"
2025-07-09 11:52:38,143 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,143 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,143 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val)="str"
2025-07-09 11:52:38,143 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,143 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,143 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:38,143 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,143 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,143 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,143 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,143 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:38,144 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,144 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,144 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T14:27:06.668004", type(val) is: "str"
2025-07-09 11:52:38,144 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,144 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,144 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:38,144 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,144 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,144 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,144 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:38,144 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:38,144 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,144 - INFO - Inside escape_xml(). s = "2025-07-09T14:27:06.668004" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "2025-07-09T14:27:06.668004"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,145 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,145 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:38,145 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,145 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,145 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,145 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:38,146 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,146 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:38,146 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,146 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:38,146 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:38,146 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,146 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,147 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:38,147 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,147 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,147 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:38,147 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,147 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,147 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,147 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,147 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:38,147 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,147 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:38,148 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:38,148 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:38,148 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,148 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:38,148 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:38,148 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:38,148 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,148 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:38,148 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:38,148 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:38,148 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:38,149 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:52:47,470 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:52:47,472 - INFO - Realizando busca do histórico 1
2025-07-09 11:52:47,475 - INFO - Histórico 1 encontrado com sucesso
2025-07-09 11:52:47,475 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:52:56,561 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:52:56,562 - INFO - Realizando busca do histórico 1
2025-07-09 11:52:56,564 - INFO - Histórico 1 encontrado com sucesso
2025-07-09 11:52:56,564 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:56,564 - INFO - Inside dicttoxml(): type(obj) is: "dict", obj="{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:56,564 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:56,564 - INFO - Inside convert(). obj type is: "dict", obj="{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:56,564 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:56,564 - INFO - Inside unicode_me(). val = "{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:56,564 - INFO - Inside convert_dict(): obj type is: "dict", obj="{'nome': 'Hackathon', 'descricao': 'Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina', 'idusuario': 2, 'idtarefa': 1, 'finalizada': True, 'idhist': 1, 'dt_inclusao': '2025-07-09T13:47:11.426123', 'dt_edicao': None, 'dt_exclusao': None}"
2025-07-09 11:52:56,564 - INFO - Inside default_item_func(). parent = "response"
2025-07-09 11:52:56,564 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:56,565 - INFO - Looping inside convert_dict(): key="nome", val="Hackathon", type(val)="str"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,565 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:56,565 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,565 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,565 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:56,565 - INFO - Inside convert_kv(): key="nome", val="Hackathon", type(val) is: "str"
2025-07-09 11:52:56,565 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,566 - INFO - Inside make_valid_xml_name(). Testing key "nome" with attr "{}"
2025-07-09 11:52:56,566 - INFO - Inside escape_xml(). s = "nome" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,566 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "nome"
2025-07-09 11:52:56,566 - INFO - Inside key_is_valid_xml(). Testing "nome"
2025-07-09 11:52:56,566 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,566 - INFO - Inside escape_xml(). s = "Hackathon" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "Hackathon"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina"
2025-07-09 11:52:56,566 - INFO - Looping inside convert_dict(): key="descricao", val="Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina", type(val)="str"
2025-07-09 11:52:56,566 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,567 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,567 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:56,567 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,567 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,567 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,567 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,567 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:56,567 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,567 - INFO - Inside unicode_me(). val = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina"
2025-07-09 11:52:56,567 - INFO - Inside convert_kv(): key="descricao", val="Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina", type(val) is: "str"
2025-07-09 11:52:56,567 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,568 - INFO - Inside make_valid_xml_name(). Testing key "descricao" with attr "{}"
2025-07-09 11:52:56,568 - INFO - Inside escape_xml(). s = "descricao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,568 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "descricao"
2025-07-09 11:52:56,568 - INFO - Inside key_is_valid_xml(). Testing "descricao"
2025-07-09 11:52:56,568 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,568 - INFO - Inside escape_xml(). s = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "Participou e ganhou pódio de segundo lugar no evento de hackathon em Adamantina"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:56,568 - INFO - Looping inside convert_dict(): key="idusuario", val="2", type(val)="int"
2025-07-09 11:52:56,568 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,569 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:56,569 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,569 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,569 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "2"
2025-07-09 11:52:56,569 - INFO - Inside convert_kv(): key="idusuario", val="2", type(val) is: "int"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,569 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,569 - INFO - Inside make_valid_xml_name(). Testing key "idusuario" with attr "{}"
2025-07-09 11:52:56,569 - INFO - Inside escape_xml(). s = "idusuario" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,570 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "idusuario"
2025-07-09 11:52:56,570 - INFO - Inside key_is_valid_xml(). Testing "idusuario"
2025-07-09 11:52:56,570 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,570 - INFO - Inside escape_xml(). s = "2" and type(s) = "<class 'int'>"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:56,570 - INFO - Looping inside convert_dict(): key="idtarefa", val="1", type(val)="int"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,570 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:56,570 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,570 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,570 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:56,571 - INFO - Inside convert_kv(): key="idtarefa", val="1", type(val) is: "int"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,571 - INFO - Inside make_valid_xml_name(). Testing key "idtarefa" with attr "{}"
2025-07-09 11:52:56,571 - INFO - Inside escape_xml(). s = "idtarefa" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,571 - INFO - Inside unicode_me(). val = "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside key_is_valid_xml(). Testing "idtarefa"
2025-07-09 11:52:56,571 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,572 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:56,572 - INFO - Looping inside convert_dict(): key="finalizada", val="True", type(val)="bool"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,572 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:56,572 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,572 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,572 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,572 - INFO - Inside unicode_me(). val = "True"
2025-07-09 11:52:56,573 - INFO - Inside convert_bool(): key="finalizada", val="True", type(val) is: "bool"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,573 - INFO - Inside make_valid_xml_name(). Testing key "finalizada" with attr "{}"
2025-07-09 11:52:56,573 - INFO - Inside escape_xml(). s = "finalizada" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,573 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "finalizada"
2025-07-09 11:52:56,573 - INFO - Inside key_is_valid_xml(). Testing "finalizada"
2025-07-09 11:52:56,573 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:56,573 - INFO - Looping inside convert_dict(): key="idhist", val="1", type(val)="int"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,573 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,574 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:56,574 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,574 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,574 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,574 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,574 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:56,574 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,574 - INFO - Inside unicode_me(). val = "1"
2025-07-09 11:52:56,574 - INFO - Inside convert_kv(): key="idhist", val="1", type(val) is: "int"
2025-07-09 11:52:56,574 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,574 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,574 - INFO - Inside make_valid_xml_name(). Testing key "idhist" with attr "{}"
2025-07-09 11:52:56,574 - INFO - Inside escape_xml(). s = "idhist" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,575 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "idhist"
2025-07-09 11:52:56,575 - INFO - Inside key_is_valid_xml(). Testing "idhist"
2025-07-09 11:52:56,575 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,575 - INFO - Inside escape_xml(). s = "1" and type(s) = "<class 'int'>"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:56,575 - INFO - Looping inside convert_dict(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val)="str"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,575 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:56,575 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,575 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:56,576 - INFO - Inside convert_kv(): key="dt_inclusao", val="2025-07-09T13:47:11.426123", type(val) is: "str"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,576 - INFO - Inside make_valid_xml_name(). Testing key "dt_inclusao" with attr "{}"
2025-07-09 11:52:56,576 - INFO - Inside escape_xml(). s = "dt_inclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,576 - INFO - Inside unicode_me(). val = "dt_inclusao"
2025-07-09 11:52:56,576 - INFO - Inside key_is_valid_xml(). Testing "dt_inclusao"
2025-07-09 11:52:56,577 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,577 - INFO - Inside escape_xml(). s = "2025-07-09T13:47:11.426123" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "2025-07-09T13:47:11.426123"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:56,577 - INFO - Looping inside convert_dict(): key="dt_edicao", val="None", type(val)="NoneType"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,577 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:56,577 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,577 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,577 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,577 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:56,578 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,578 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:56,578 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:56,578 - INFO - Inside convert_none(): key="dt_edicao". val="None", attr_type="False", attr={}
2025-07-09 11:52:56,578 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,578 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,578 - INFO - Inside make_valid_xml_name(). Testing key "dt_edicao" with attr "{}"
2025-07-09 11:52:56,578 - INFO - Inside escape_xml(). s = "dt_edicao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,578 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,578 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "dt_edicao"
2025-07-09 11:52:56,579 - INFO - Inside key_is_valid_xml(). Testing "dt_edicao"
2025-07-09 11:52:56,579 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:56,579 - INFO - Looping inside convert_dict(): key="dt_exclusao", val="None", type(val)="NoneType"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,579 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:56,579 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,579 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,579 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,579 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "None"
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "False"
2025-07-09 11:52:56,580 - INFO - Inside convert_none(): key="dt_exclusao". val="None", attr_type="False", attr={}
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "{}"
2025-07-09 11:52:56,580 - INFO - Inside make_valid_xml_name(). Testing key "dt_exclusao" with attr "{}"
2025-07-09 11:52:56,580 - INFO - Inside escape_xml(). s = "dt_exclusao" and type(s) = "<class 'str'>"
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,580 - INFO - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
2025-07-09 11:52:56,580 - INFO - Inside unicode_me(). val = "dt_exclusao"
2025-07-09 11:52:56,580 - INFO - Inside key_is_valid_xml(). Testing "dt_exclusao"
2025-07-09 11:52:56,581 - INFO - Inside make_attstring(). attr = "{}"
2025-07-09 11:52:56,581 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:55:09,743 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:55:09,750 - DEBUG - Atualizando histórico 2 com novos dados: {'descricao': 'Finalizou a leitura do livro Introduction to Algorithms', 'finalizada': True}
2025-07-09 11:55:09,776 - DEBUG - Criando recompensa para hist: 2, usuário: 1
2025-07-09 11:55:09,776 - INFO - Iniciando extração da API - pontuação: 14
2025-07-09 11:55:09,779 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:55:09,914 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/14 HTTP/1.1" 200 1992
2025-07-09 11:55:09,917 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/14/
2025-07-09 11:55:09,920 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-09 11:55:10,000 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/14/ HTTP/1.1" 200 4542
2025-07-09 11:55:10,002 - INFO - Transform_API concluída para: kakuna
2025-07-09 11:55:10,018 - INFO - Recompensa criada para histórico 2
2025-07-09 11:55:10,021 - INFO - Histórico 2 atualizado com sucesso
2025-07-09 11:55:10,022 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:56:03,046 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:56:03,046 - DEBUG - Deletando histórico 1
2025-07-09 11:56:03,060 - INFO - Histórico 1 foi marcado como deletado
2025-07-09 11:56:03,061 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:56:20,429 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:56:20,430 - INFO - Realizando busca do histórico 1
2025-07-09 11:56:20,434 - WARNING - Histórico 1 não foi encontrado
2025-07-09 11:56:20,434 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:56:30,864 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:56:30,864 - DEBUG - Realizando a busca de todos os históricos
2025-07-09 11:56:30,870 - INFO - 12 históricos encontrados com sucesso
2025-07-09 11:56:30,872 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 11:56:58,604 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 11:56:58,605 - DEBUG - Realizando a busca de todas as recompensas
2025-07-09 11:56:58,611 - INFO - 12 recompensas encontradas com sucesso
2025-07-09 11:56:58,613 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 19:39:55,363 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 19:39:55,388 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'leitura', 'descricao': 'inicializou leitura do livro entendendo algoritmos ', 'idusuario': 4, 'idtarefa': 8, 'finalizada': False}
2025-07-09 19:39:55,434 - INFO - Histórico 14 foi criado com sucesso
2025-07-09 19:39:55,435 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-09 19:41:53,263 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-09 19:41:53,287 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'ETL', 'descricao': 'Participou de um intensivo de ETL no trabalho', 'idusuario': 1, 'idtarefa': 7, 'finalizada': False}
2025-07-09 19:41:53,307 - INFO - Histórico 15 foi criado com sucesso
2025-07-09 19:41:53,308 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:12:07,979 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:12:08,013 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'finlizou o curso de nivel avançado da Udemy sobre airflow', 'idusuario': 1, 'idtarefa': 6, 'finalizada': True}
2025-07-10 19:12:08,084 - INFO - Histórico 16 foi criado com sucesso
2025-07-10 19:12:08,088 - ERROR - Erro ao criar histórico: Don't know how to join to <Mapper at 0x2bed4b70450; Tarefa>. Please use the .select_from() method to establish an explicit left side, as well as providing an explicit ON clause if not present already to help resolve the ambiguity.
2025-07-10 19:12:08,089 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:21:27,670 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:21:27,680 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'finlizou o curso de nivel avançado da Udemy sobre airflow', 'idusuario': 1, 'idtarefa': 6, 'finalizada': True}
2025-07-10 19:21:27,723 - INFO - Histórico 17 foi criado com sucesso
2025-07-10 19:21:27,728 - ERROR - Erro ao criar histórico: Don't know how to join to <Mapper at 0x1dedf790310; Tarefa>. Please use the .select_from() method to establish an explicit left side, as well as providing an explicit ON clause if not present already to help resolve the ambiguity.
2025-07-10 19:21:27,729 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:24:11,229 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:24:11,240 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'finlizou o curso de nivel avançado da Udemy sobre airflow', 'idusuario': 1, 'idtarefa': 6, 'finalizada': True}
2025-07-10 19:24:11,278 - INFO - Histórico 18 foi criado com sucesso
2025-07-10 19:24:11,284 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 19:24:11,284 - INFO - Iniciando extração da API - pontuação: 26
2025-07-10 19:24:11,291 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:24:11,448 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/26 HTTP/1.1" 200 6501
2025-07-10 19:24:11,455 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/26/
2025-07-10 19:24:11,458 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:24:11,553 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/26/ HTTP/1.1" 200 9192
2025-07-10 19:24:11,556 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 19:24:11,559 - INFO - Transform_API concluída para: Raichu
2025-07-10 19:24:11,560 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 19:24:11,560 - ERROR - Erro ao criar histórico: 'Recompensa' object has no attribute 'idusuario'
2025-07-10 19:24:11,561 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:25:22,483 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:25:22,491 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'finlizou o curso de nivel avançado da Udemy sobre airflow', 'idusuario': 1, 'idtarefa': 6, 'finalizada': True}
2025-07-10 19:25:22,522 - INFO - Histórico 19 foi criado com sucesso
2025-07-10 19:25:22,527 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 19:25:22,528 - INFO - Iniciando extração da API - pontuação: 30
2025-07-10 19:25:22,532 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:25:22,661 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/30 HTTP/1.1" 200 5943
2025-07-10 19:25:22,668 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/30/
2025-07-10 19:25:22,671 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:25:22,775 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/30/ HTTP/1.1" 200 6103
2025-07-10 19:25:22,778 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 19:25:22,779 - INFO - Transform_API concluída para: Nidorina
2025-07-10 19:25:22,779 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 19:25:22,779 - DEBUG - Criando recompensa para hist: 19
2025-07-10 19:25:22,779 - ERROR - Erro ao criar histórico: 'Recompensa' object has no attribute 'total_pontos'
2025-07-10 19:25:22,781 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:26:08,637 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:26:08,640 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste', 'descricao': 'teste', 'idusuario': 1, 'idtarefa': 1, 'finalizada': True}
2025-07-10 19:26:08,667 - INFO - Histórico 20 foi criado com sucesso
2025-07-10 19:26:08,670 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 19:26:08,671 - INFO - Iniciando extração da API - pontuação: 40
2025-07-10 19:26:08,675 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:26:08,788 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/40 HTTP/1.1" 200 7767
2025-07-10 19:26:08,795 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/40/
2025-07-10 19:26:08,796 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:26:08,893 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/40/ HTTP/1.1" 200 9527
2025-07-10 19:26:08,897 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 19:26:08,897 - INFO - Transform_API concluída para: Wigglytuff
2025-07-10 19:26:08,898 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 19:26:08,898 - DEBUG - Criando recompensa para hist: 20
2025-07-10 19:26:08,901 - ERROR - Erro ao criar histórico: 'Recompensa' object has no attribute '_mapping'
2025-07-10 19:26:08,902 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:28:20,624 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:28:20,630 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste', 'descricao': 'teste', 'idusuario': 1, 'idtarefa': 1, 'finalizada': True}
2025-07-10 19:28:20,659 - INFO - Histórico 21 foi criado com sucesso
2025-07-10 19:28:20,664 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 19:28:20,664 - INFO - Iniciando extração da API - pontuação: 50
2025-07-10 19:28:20,669 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:28:20,808 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/50 HTTP/1.1" 200 6747
2025-07-10 19:28:20,816 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/50/
2025-07-10 19:28:20,818 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:28:20,912 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/50/ HTTP/1.1" 200 8893
2025-07-10 19:28:20,915 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 19:28:20,916 - INFO - Transform_API concluída para: Diglett
2025-07-10 19:28:20,916 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 19:28:20,917 - DEBUG - Criando recompensa para hist: 21
2025-07-10 19:28:20,919 - ERROR - Erro ao criar histórico: '_sa_instance_state' is an invalid keyword argument for Recompensa
2025-07-10 19:28:20,920 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 19:29:23,551 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 19:29:23,558 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'teste', 'descricao': 'teste', 'idusuario': 1, 'idtarefa': 1, 'finalizada': True}
2025-07-10 19:29:23,591 - INFO - Histórico 22 foi criado com sucesso
2025-07-10 19:29:23,597 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 19:29:23,597 - INFO - Iniciando extração da API - pontuação: 60
2025-07-10 19:29:23,603 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:29:23,740 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/60 HTTP/1.1" 200 6357
2025-07-10 19:29:23,751 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/60/
2025-07-10 19:29:23,754 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 19:29:23,851 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/60/ HTTP/1.1" 200 8787
2025-07-10 19:29:23,853 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 19:29:23,854 - INFO - Transform_API concluída para: Poliwag
2025-07-10 19:29:23,854 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 19:29:23,854 - DEBUG - Criando recompensa para hist: 22
2025-07-10 19:29:23,870 - INFO - Recompensa criada para histórico 22
2025-07-10 19:29:23,872 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 20:02:51,344 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 20:02:51,373 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Hackathon', 'descricao': 'Participou do evento de Hackathon em Tupã', 'idusuario': 3, 'idtarefa': 1, 'finalizada': True}
2025-07-10 20:02:51,470 - INFO - Histórico 17 foi criado com sucesso
2025-07-10 20:02:51,474 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 20:02:51,474 - INFO - Iniciando extração da API - pontuação: 21
2025-07-10 20:02:51,487 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:02:51,981 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/21 HTTP/1.1" 200 5651
2025-07-10 20:02:51,997 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/21/
2025-07-10 20:02:51,999 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:02:52,430 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/21/ HTTP/1.1" 200 7175
2025-07-10 20:02:52,438 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 20:02:52,440 - INFO - Transform_API concluída para: Spearow
2025-07-10 20:02:52,440 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 20:02:52,440 - DEBUG - Criando recompensa para hist: 17
2025-07-10 20:02:52,453 - INFO - Recompensa criada para histórico 17
2025-07-10 20:02:52,456 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 20:03:37,065 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 20:03:37,095 - DEBUG - Atualizando histórico 16 com novos dados: {'finalizada': True}
2025-07-10 20:03:37,119 - INFO - Histórico 16 atualizado com sucesso
2025-07-10 20:03:37,119 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 20:05:02,446 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 20:05:02,446 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'AirFlow', 'descricao': 'Finalizou curso avançado de airflow na Udemy', 'idusuario': 1, 'idtarefa': 6, 'finalizada': True}
2025-07-10 20:05:02,465 - INFO - Histórico 18 foi criado com sucesso
2025-07-10 20:05:02,467 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 20:05:02,467 - INFO - Iniciando extração da API - pontuação: 18
2025-07-10 20:05:02,469 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:05:02,895 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/18 HTTP/1.1" 200 5681
2025-07-10 20:05:02,899 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/18/
2025-07-10 20:05:02,901 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:05:03,318 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/18/ HTTP/1.1" 200 4646
2025-07-10 20:05:03,321 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 20:05:03,322 - INFO - Transform_API concluída para: Pidgeot
2025-07-10 20:05:03,322 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 20:05:03,322 - DEBUG - Criando recompensa para hist: 18
2025-07-10 20:05:03,334 - INFO - Recompensa criada para histórico 18
2025-07-10 20:05:03,335 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 20:08:32,653 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 20:08:32,656 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Leitura', 'descricao': 'Finalizou leitura do livro Tecnologi não é tudo', 'idusuario': 3, 'idtarefa': 8, 'finalizada': True}
2025-07-10 20:08:32,683 - INFO - Histórico 19 foi criado com sucesso
2025-07-10 20:08:32,685 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 20:08:32,685 - INFO - Iniciando extração da API - pontuação: 22
2025-07-10 20:08:32,688 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:08:33,175 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/22 HTTP/1.1" 200 5763
2025-07-10 20:08:33,184 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/22/
2025-07-10 20:08:33,186 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:08:33,636 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/22/ HTTP/1.1" 200 7502
2025-07-10 20:08:33,642 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 20:08:33,644 - INFO - Transform_API concluída para: Fearow
2025-07-10 20:08:33,644 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 20:08:33,644 - DEBUG - Criando recompensa para hist: 19
2025-07-10 20:08:33,749 - INFO - Recompensa criada para histórico 19
2025-07-10 20:08:33,751 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-10 20:09:09,734 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-10 20:09:09,735 - DEBUG - Dados para novo histórico foram recebidos com sucesso: {'nome': 'Leitura', 'descricao': 'Finalizou leitura do livro Tecnologi não é tudo', 'idusuario': 4, 'idtarefa': 8, 'finalizada': True}
2025-07-10 20:09:09,753 - INFO - Histórico 20 foi criado com sucesso
2025-07-10 20:09:09,755 - INFO - Realizando etapa de extração na recompensa de idhist <built-in function id>
2025-07-10 20:09:09,755 - INFO - Iniciando extração da API - pontuação: 11
2025-07-10 20:09:09,756 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:09:10,192 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon/11 HTTP/1.1" 200 2025
2025-07-10 20:09:10,194 - INFO - Buscando dados de espécie: https://pokeapi.co/api/v2/pokemon-species/11/
2025-07-10 20:09:10,195 - DEBUG - Starting new HTTPS connection (1): pokeapi.co:443
2025-07-10 20:09:11,634 - DEBUG - https://pokeapi.co:443 "GET /api/v2/pokemon-species/11/ HTTP/1.1" 200 8494
2025-07-10 20:09:11,809 - INFO - Realizando etapa de transformação ne recompensa de idhist <built-in function id>
2025-07-10 20:09:11,810 - INFO - Transform_API concluída para: Metapod
2025-07-10 20:09:11,810 - INFO - Realizando etapa de carregamento na recompensa de idhist <built-in function id>
2025-07-10 20:09:11,810 - DEBUG - Criando recompensa para hist: 20
2025-07-10 20:09:11,822 - INFO - Recompensa criada para histórico 20
2025-07-10 20:09:11,823 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:45:05,496 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 18:45:05,508 - DEBUG - Realizando a busca de todas as tarefas
2025-07-15 18:45:05,512 - INFO - 8 tarefas encontradas com sucesso
2025-07-15 18:45:05,513 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:47:23,198 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 18:47:23,200 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:53:17,183 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 18:53:17,184 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:53:39,908 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 18:53:39,908 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:53:40,506 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:53:40,506 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:53:40,506 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:53:40,507 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 18:53:40,816 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:53:40,817 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:53:40,817 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:53:40,817 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 18:53:41,116 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:53:41,117 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:53:41,117 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:53:41,117 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 18:53:41,408 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:53:41,409 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:53:41,409 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:53:41,409 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 18:58:05,316 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 18:58:05,316 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:58:06,049 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:06,049 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:06,049 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:06,050 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 18:58:06,517 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:06,517 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:06,518 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:06,518 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 18:58:06,999 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:06,999 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:06,999 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:06,999 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 18:58:07,445 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:07,446 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:07,446 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:07,446 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 18:58:19,031 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 18:58:19,031 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 18:58:19,456 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:19,456 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:19,456 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:19,456 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 18:58:19,837 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:19,838 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:19,838 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:19,838 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 18:58:20,264 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:20,265 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:20,265 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:20,265 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 18:58:20,613 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 18:58:20,613 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 18:58:20,613 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 18:58:20,613 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:01:54,644 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:01:54,644 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:01:55,366 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:01:55,366 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:01:55,366 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:01:55,366 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:01:55,890 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:01:55,890 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:01:55,890 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:01:55,891 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:01:56,354 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:01:56,355 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:01:56,355 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:01:56,355 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:01:56,772 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:01:56,772 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:01:56,772 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:01:56,773 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:02:05,433 - DEBUG - Starting new HTTP connection (1): localhost:8000
2025-07-15 19:02:07,526 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:02:07,541 - INFO - Realizando busca da tarefa 2
2025-07-15 19:02:07,548 - INFO - Tarefa 2 encontrada com sucesso
2025-07-15 19:02:07,563 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:02:07,566 - DEBUG - http://localhost:8000 "GET /task/?id=2 HTTP/1.1" 200 210
2025-07-15 19:02:19,908 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:02:19,908 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:02:20,529 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:02:20,530 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:02:20,530 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:02:20,530 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:02:20,975 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:02:20,975 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:02:20,976 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:02:20,976 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:02:21,446 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:02:21,446 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:02:21,446 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:02:21,447 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:02:21,964 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:02:21,964 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:02:21,964 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:02:21,965 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:03:02,776 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:03:02,776 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:03:03,707 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:03:03,708 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:03:03,709 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:03:03,710 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:03:04,410 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:03:04,410 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:03:04,410 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:03:04,411 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:03:05,236 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:03:05,237 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:03:05,237 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:03:05,237 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:03:06,402 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:03:06,403 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:03:06,404 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:03:06,405 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:05:02,427 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:05:02,428 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:05:03,144 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:03,145 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:03,145 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:03,146 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:05:03,891 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:03,891 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:03,891 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:03,891 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:05:04,442 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:04,442 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:04,442 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:04,442 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:05:05,040 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:05,040 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:05,040 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:05,040 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:05:11,817 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:05:11,817 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:05:12,250 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:12,250 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:12,250 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:12,250 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:05:12,609 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:12,609 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:12,609 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:12,609 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:05:12,994 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:12,995 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:12,995 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:12,995 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:05:13,343 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:05:13,343 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:05:13,343 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:05:13,343 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:10:09,269 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:10:09,269 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:10:09,899 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:09,900 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:09,900 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:09,900 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:10:10,236 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:10,236 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:10,236 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:10,236 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:10:10,599 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:10,599 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:10,599 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:10,599 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:10:11,001 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:11,001 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:11,001 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:11,001 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:10:32,576 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:10:32,577 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:10:33,326 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:33,327 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:33,327 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:33,327 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:10:33,957 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:33,958 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:33,958 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:33,958 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:10:34,520 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:34,520 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:34,520 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:34,521 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:10:35,047 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:35,048 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:35,048 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:35,048 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:10:53,034 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:10:53,034 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:10:53,762 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:53,762 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:53,762 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:53,762 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:10:54,299 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:54,299 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:54,299 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:54,300 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:10:54,950 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:54,951 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:54,951 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:54,951 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:10:55,561 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:10:55,561 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:10:55,561 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:10:55,561 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:11:31,939 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:11:31,940 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:11:32,542 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:11:32,542 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:11:32,542 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:11:32,542 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:11:32,904 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:11:32,904 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:11:32,904 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:11:32,904 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:11:33,278 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:11:33,278 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:11:33,278 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:11:33,278 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:11:33,649 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:11:33,650 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:11:33,650 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:11:33,650 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:14:23,136 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:14:23,136 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:14:23,881 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:23,881 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:23,882 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:23,882 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:14:24,498 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:24,498 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:24,499 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:24,499 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:14:25,235 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:25,235 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:25,235 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:25,236 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:14:55,523 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:14:55,524 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:14:56,012 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:56,012 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:56,012 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:56,012 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:14:56,379 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:56,379 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:56,379 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:56,379 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:14:56,728 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:56,728 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:56,728 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:56,729 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:14:57,079 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:14:57,079 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:14:57,079 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:14:57,079 - DEBUG - STREAM b'IDAT' 131 28826
2025-07-15 19:19:26,217 - DEBUG - Starting new HTTP connection (1): localhost:8000
2025-07-15 19:19:28,370 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:19:28,386 - DEBUG - Atualizando tarefa 2 com novos dados: {'titulo': 'Olimpíada de matemática - Fase 1'}
2025-07-15 19:19:28,447 - INFO - Tarefa 2 atualizada com sucesso
2025-07-15 19:19:28,451 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:19:28,455 - DEBUG - http://localhost:8000 "PATCH /task/2 HTTP/1.1" 200 243
2025-07-15 19:19:40,158 - DEBUG - Starting new HTTP connection (1): localhost:8000
2025-07-15 19:19:42,201 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:19:42,202 - DEBUG - Atualizando tarefa 3 com novos dados: {'titulo': 'Olimpíada de matemática - Fase 2'}
2025-07-15 19:19:42,223 - INFO - Tarefa 3 atualizada com sucesso
2025-07-15 19:19:42,224 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:19:42,226 - DEBUG - http://localhost:8000 "PATCH /task/3 HTTP/1.1" 200 227
2025-07-15 19:20:03,926 - DEBUG - Starting new HTTP connection (1): localhost:8000
2025-07-15 19:20:05,977 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:20:05,978 - DEBUG - Atualizando tarefa 5 com novos dados: {'titulo': 'Apache AirFlow - Curso básico'}
2025-07-15 19:20:05,993 - INFO - Tarefa 5 atualizada com sucesso
2025-07-15 19:20:05,994 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:20:05,995 - DEBUG - http://localhost:8000 "PATCH /task/5 HTTP/1.1" 200 231
2025-07-15 19:20:13,068 - DEBUG - Starting new HTTP connection (1): localhost:8000
2025-07-15 19:20:15,108 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:20:15,112 - DEBUG - Atualizando tarefa 6 com novos dados: {'titulo': 'Apache AirFlow - Curso avançado'}
2025-07-15 19:20:15,159 - INFO - Tarefa 6 atualizada com sucesso
2025-07-15 19:20:15,161 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:20:15,165 - DEBUG - http://localhost:8000 "PATCH /task/6 HTTP/1.1" 200 235
2025-07-15 19:20:20,183 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:20:20,185 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:20:20,632 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:20,632 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:20,632 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:20,632 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:20:21,007 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:21,007 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:21,007 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:21,008 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:20:21,460 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:21,460 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:21,460 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:21,460 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:20:21,930 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:21,930 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:21,930 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:21,930 - DEBUG - STREAM b'IDAT' 131 33685
2025-07-15 19:20:23,646 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:20:23,647 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:20:24,360 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:24,360 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:24,361 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:24,361 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:20:24,828 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:24,828 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:24,828 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:24,829 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:20:25,266 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:25,266 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:25,266 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:25,266 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:20:25,711 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:20:25,711 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:20:25,711 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:20:25,712 - DEBUG - STREAM b'IDAT' 131 33685
2025-07-15 19:23:09,594 - DEBUG - Starting new HTTP connection (1): localhost:8000
2025-07-15 19:23:11,649 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:23:11,654 - DEBUG - Realizando a busca de todas as tarefas
2025-07-15 19:23:11,657 - INFO - 8 tarefas encontradas com sucesso
2025-07-15 19:23:11,658 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:23:11,659 - DEBUG - http://localhost:8000 "GET /task/ HTTP/1.1" 200 1716
2025-07-15 19:23:20,569 - INFO - A sessão com o banco de dados foi inicializada com suceso
2025-07-15 19:23:20,569 - INFO - A sessão com o banco de dados foi finalizada com sucesso
2025-07-15 19:23:21,055 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:23:21,056 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:23:21,056 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:23:21,056 - DEBUG - STREAM b'IDAT' 131 36390
2025-07-15 19:23:21,469 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:23:21,470 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:23:21,470 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:23:21,470 - DEBUG - STREAM b'IDAT' 131 39488
2025-07-15 19:23:21,904 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:23:21,904 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:23:21,904 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:23:21,905 - DEBUG - STREAM b'IDAT' 131 36752
2025-07-15 19:23:22,442 - DEBUG - STREAM b'IHDR' 16 13
2025-07-15 19:23:22,442 - DEBUG - STREAM b'tEXt' 41 57
2025-07-15 19:23:22,443 - DEBUG - STREAM b'pHYs' 110 9
2025-07-15 19:23:22,443 - DEBUG - STREAM b'IDAT' 131 33685
